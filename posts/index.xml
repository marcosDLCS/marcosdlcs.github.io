<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on mdlcs.dev</title>
    <link>https://mdlcs.dev/posts/</link>
    <description>Recent content in Posts on mdlcs.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-ES</language>
    <lastBuildDate>Sun, 11 May 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://mdlcs.dev/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>No te olvides de la documentaci√≥n (II)</title>
      <link>https://mdlcs.dev/posts/2025-05-documentation-ii/</link>
      <pubDate>Sun, 11 May 2025 00:00:00 +0000</pubDate>
      
      <guid>https://mdlcs.dev/posts/2025-05-documentation-ii/</guid>
      <description>Continuamos desmitificando la documentaci√≥n de software. En esta segunda parte exploramos qu√© significa realmente documentar, analizamos sus diversos tipos y cuestionamos los mitos que nos han llevado a rechazarla sistem√°ticamente.</description>
      <content:encoded><![CDATA[<h2 id="-tenemos-claro-que-no-nos-gusta-pero-qu√©-es-documentar">ü§∑üèΩ‚Äç‚ôÄÔ∏è Tenemos claro que no nos gusta pero, ¬øqu√© es documentar?</h2>
<p>En la entrada anterior habl√© de la visi√≥n distorsionada que a veces tenemos sobre la tarea de documentar. Ese doble filo en el que <strong>admitimos su utilidad en momentos clave pero que nos hace rechazarla</strong> por el mero hecho de no tener interiorizadas maneras de trabajar que incluyan su creaci√≥n y evoluci√≥n como uno de los pilares de nuestro d√≠a a d√≠a.</p>
<p>Con el paso de los a√±os he estado en m√∫ltiples discusiones al respecto de este tema, pero √∫ltimamente me asalta una pregunta: <strong>¬øhemos consensuado realmente lo que ES documentar?</strong> Personalmente no tengo una respuesta cien por cien absoluta, por ello en este art√≠culo me centrar√© en explicar los distintos tipos de documentaci√≥n que existen y todos aquellos mitos asociados a su creaci√≥n y mantenimiento.</p>
<figure>
    <img loading="lazy" src="images/202505-heisenberg.jpg"
         alt="Meme en el que aparece Heisenberg de Breaking Bad diciendo que √©l es la documentaci√≥n"/> 
</figure>

<h2 id="-algunos-tipos-de-documentaci√≥n">ü©∏ Algunos tipos de documentaci√≥n</h2>
<p>Admito que es dif√≠cil a veces el &ldquo;ver m√°s all√°&rdquo; de la documentaci√≥n pura y dura que podemos consumir en nuestro d√≠a a d√≠a. Si hago un ejercicio mental simple, lo primero que me viene a la mente al pensar en documentaci√≥n son p√°ginas y p√°ginas infumables en <em>Redmine</em>, de autor desconocido, pero que todos temen eliminar. Lo cierto es que la documentaci√≥n es mucho m√°s, por ello paso a listar lo que para mi son sus distintos tipos:</p>
<ul>
<li>
<p><strong>Gestores de documentaci√≥n interna</strong>: Normalmente conocidos como &ldquo;el Notion o el Confluence&rdquo; este tipo de plataformas se convierten en el punto central de la documentaci√≥n de un proyecto o empresa. Suelen albergar toda clase de informaci√≥n, desde <em>onboarding</em> hasta arquitecturas y decisiones t√©cnicas, pasando por procedimientos y gu√≠as. El problema habitual es que terminan convirti√©ndose en cementerios de informaci√≥n desactualizada.</p>
</li>
<li>
<p><strong>Plataforma de gesti√≥n de tareas</strong>: Sin lugar a dudas el <em>software</em> de gesti√≥n de tareas que usemos en nuestra organizaci√≥n es una fuente de documentaci√≥n&hellip; cuando decidimos agregar informaci√≥n relevante a nuestras historias de usuario o tareas. Aqu√≠ reside un tipo de documentaci√≥n extremadamente valiosa: el contexto, los criterios de aceptaci√≥n, las decisiones que se tomaron durante el desarrollo. Lamentablemente, muchas veces nos limitamos a t√≠tulos escuetos y descripciones austeras.</p>
</li>
<li>
<p><strong>Est√°ndares de documentaci√≥n t√©cnica</strong>: Herramientas como JavaDoc, OpenAPI/Swagger, AsciiDoc entre otros representan una aproximaci√≥n controlada a la documentaci√≥n de c√≥digo y APIs. Estos est√°ndares permiten generar documentaci√≥n t√©cnica de forma automatizada, pero requieren un esfuerzo constante de mantenimiento por parte del equipo.</p>
</li>
<li>
<p><strong>Tareas automatizadas</strong>: Los <em>scripts</em>, <em>pipelines</em> CI/CD, tests automatizados y Makefiles son formas de documentaci√≥n ejecutable. Un buen Makefile o un <em>pipeline</em> bien configurado no solo facilita los procesos repetitivos, sino que tambi√©n documenta c√≥mo se realizan determinadas acciones en el proyecto. Los tests, especialmente los de aceptaci√≥n o los <em>e2e</em>, pueden ser excelentes formas de documentar el comportamiento esperado del sistema.</p>
</li>
<li>
<p><strong>C√≥digo</strong>: El propio c√≥digo es, en s√≠ mismo, una forma de documentaci√≥n. Los nombres de clases, m√©todos y variables bien elegidos, la estructura del proyecto y los patrones de dise√±o aplicados comunican intenciones y decisiones. Un c√≥digo bien estructurado y con nombres significativos puede reducir la necesidad de documentaci√≥n adicional. Sin embargo, el c√≥digo nos dice el &ldquo;c√≥mo&rdquo; pero no siempre el &ldquo;por qu√©&rdquo; de las decisiones tomadas.</p>
</li>
<li>
<p><strong>Documentaci√≥n externa oficial y no oficial</strong>: Las documentaciones de APIs, gu√≠as, ejemplos, respuestas en Stack Overflow (mientras dure tras el auge de la IA) o art√≠culos en blogs como Baeldung forman parte de nuestro ecosistema documental d√≠a a d√≠a. A menudo dependemos m√°s de estos recursos externos que de nuestra propia documentaci√≥n interna, lo que puede ser problem√°tico cuando nuestro contexto espec√≠fico difiere del general.</p>
</li>
<li>
<p><strong>Herramientas de IA generativa</strong>: En los √∫ltimos a√±os, estas herramientas han revolucionado la forma en que interactuamos con la documentaci√≥n. Pueden ayudarnos a generar, resumir o explicar documentaci√≥n existente. Sin embargo, tambi√©n plantean desaf√≠os: ¬øEstamos delegando demasiado el conocimiento del d√≠a d√≠a a sistemas externos?, ¬øRealmente entendemos lo que estas herramientas nos explican? A pesar de su utilidad, no deber√≠an reemplazar la creaci√≥n de documentaci√≥n contextualizada para nuestros proyectos.</p>
</li>
</ul>
<h2 id="-cazadores-de-mitos">üéØ Cazadores de mitos</h2>
<p>La pregunta obvia ser√≠a, ¬øc√≥mo hemos llegado hasta aqu√≠?</p>
<p>En este sentido creo que la industria se ha visto influenciada por opiniones, mitos o creencias que no est√°n del todo fundadas, todo ello bien regado con el sesgo de autoridad que ciertas voces destilan.</p>
<h3 id="agile-manifesto">Agile manifesto</h3>
<p>Con el tiempo he llegado a la conclusi√≥n de que pocas <a href="https://agilemanifesto.org/history.html">reuniones en Utah</a> han tenido un <strong>impacto tan negativo en una industria mil millonaria</strong> como es la del desarrollo de <em>software</em>. Lo que comenz√≥ con una serie de valores y principios necesarios, se ha transformado a√±o tras a√±o en una bola de nieve de convenciones totalmente malinterpretadas.</p>
<p>Dos frases tienen la culpa:</p>
<blockquote>
<p>Working software over comprehensive documentation</p></blockquote>
<blockquote>
<p>The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.</p></blockquote>
<p>De manera aislada ambas afirmaciones tienen valor y su esencia es aplicable a√∫n a d√≠a de hoy. El verdadero problema es que muchos equipos han interpretado estos principios como &ldquo;la documentaci√≥n es mala&rdquo; o &ldquo;no documentemos nada, con hablar es suficiente&rdquo;.</p>
<p>Lo que el manifiesto √°gil realmente propon√≠a era priorizar el <em>software</em> funcional sobre extensos documentos que nadie lee, y favorecer la comunicaci√≥n directa como m√©todo principal de transmisi√≥n de informaci√≥n. Nunca sugiri√≥ eliminar la documentaci√≥n por completo.</p>
<p>La realidad es que necesitamos un equilibrio. La comunicaci√≥n cara a cara es ef√≠mera, se pierde con el tiempo y depende de la memoria humana, que es como m√≠nimo imperfecta. Una documentaci√≥n concisa, actualizada y contextualizada complementa perfectamente la comunicaci√≥n directa.</p>
<h3 id="clean-code-y-el-c√≥digo-autodocumentado">Clean Code y el c√≥digo autodocumentado</h3>
<p>La otra corriente que nos ha llevado a odiar la documentaci√≥n es el dogma del c√≥digo limpio. ¬øEso quiere decir que estoy a favor del <em>&ldquo;c√≥digo sucio&rdquo;</em>? En absoluto.</p>
<p>El problema con las reglas que se derivan del movimiento de Clean Code es su aplicaci√≥n ortodoxa sin considerar el contexto. Una de las m√°ximas m√°s repetidas es que &ldquo;el buen c√≥digo se documenta a s√≠ mismo&rdquo; y que &ldquo;si tienes que comentar tu c√≥digo, es que no est√° bien escrito&rdquo;.</p>
<p>Estas afirmaciones, aunque bien intencionadas, han llevado a muchos desarrolladores a evitar cualquier tipo de comentario o documentaci√≥n en el c√≥digo, incluso en ocasiones en las cuales ser√≠a beneficioso. El c√≥digo puede explicar el &ldquo;c√≥mo&rdquo; a trav√©s de nombres descriptivos y estructura clara, pero rara vez explica el &ldquo;por qu√©&rdquo; detr√°s de determinadas decisiones.</p>
<p>Un buen equilibrio podr√≠a ser:</p>
<ul>
<li>C√≥digo limpio y autodescriptivo para el &ldquo;c√≥mo&rdquo;.</li>
<li>Comentarios estrat√©gicos para explicar el &ldquo;por qu√©&rdquo; cuando no es obvio.</li>
<li>Documentaci√≥n externa para visiones m√°s amplias, arquitectura y contexto.</li>
</ul>
<p>Pero no nos adelantemos.</p>
<figure>
    <img loading="lazy" src="images/202505-dog-hurts.jpg"
         alt="Meme en el que aparece un perro recordando a una persona que probablemente haya olvidado qu√© hace su propio c√≥digo por no hbaerlo documentado de alguna manera"/> 
</figure>

<h3 id="hazlo-todo-al-final">Hazlo todo al final</h3>
<p>Otro mito destructivo es que la documentaci√≥n debe hacerse al final del proyecto o desarrollo. Este enfoque garantiza pr√°cticamente que la documentaci√≥n:</p>
<ol>
<li>No se har√° nunca (porque siempre hay otra tarea o proyecto esperando)</li>
<li>Ser√° incompleta (porque los detalles se han olvidado)</li>
<li>Ser√° vista como una carga sin valor real.</li>
</ol>
<p>La documentaci√≥n deber√≠a ser parte integral del proceso de desarrollo, no un ap√©ndice. Cuando se crea incrementalmente durante el desarrollo, refleja con mayor precisi√≥n las decisiones tomadas y el contexto en que se tomaron. Adem√°s, este enfoque distribuye la carga de trabajo y hace que la documentaci√≥n sea menos propensa al rechazo.</p>
<p>Una estrategia efectiva es documentar las decisiones importantes justo cuando se toman, mientras el razonamiento est√° fresco en la mente. Herramientas como los Registros de Decisiones Arquitect√≥nicas (ADR), de las que hablaremos en otro momento, son perfectas para esto.</p>
<h3 id="la-documentaci√≥n-no-evoluciona">La documentaci√≥n no evoluciona</h3>
<p>Este √∫ltimo mito es quiz√°s el m√°s da√±ino: la idea de que la documentaci√≥n es est√°tica, un artefacto inmutable que, una vez creado, permanece igual hasta que se vuelve obsoleto y se descarta.</p>
<p>En realidad, la documentaci√≥n valiosa evoluciona junto con el c√≥digo y el producto. Deber√≠a ser tratada como un producto vivo que requiere mantenimiento, actualizaciones y ocasionalmente refactorizaciones completas. La documentaci√≥n desactualizada es a menudo peor que la ausencia de documentaci√≥n, ya que induce a numerosos errores.</p>
<p>En equipos maduros, la evoluci√≥n de la documentaci√≥n deber√≠a estar tan automatizada e integrada en el proceso como el propio desarrollo. O al menos esa es mi visi√≥n de idealista irredento.</p>
<h2 id="-en-resumen">‚ûï En resumen</h2>
<p>La documentaci√≥n no tiene por qu√© ser un mal necesario o una pesada carga administrativa. Cuando se enfoca correctamente, es una herramienta poderosa que mejora la colaboraci√≥n, preserva el conocimiento de nuestros proyectos y acelera la incorporaci√≥n de nuevos miembros al equipo.</p>
<p>Los mitos que nos han llevado a despreciar la documentaci√≥n son precisamente eso, mitos. El manifiesto √°gil no proh√≠be documentar, el c√≥digo limpio no elimina la necesidad de explicar el &ldquo;por qu√©&rdquo;, y la documentaci√≥n no es algo que se hace al final ni permanece est√°tica.</p>
<p>Un enfoque equilibrado hacia la documentaci√≥n empieza por reconocer su valor como parte fundamental del proceso de desarrollo, no como un complemento opcional. Al igual que cuidamos nuestro c√≥digo, debemos cuidar nuestra documentaci√≥n: mantenerla concisa, actualizada y √∫til.</p>
<p>En la pr√≥xima entrada, explorar√© algunas estrategias pr√°cticas para integrar la documentaci√≥n en el flujo de trabajo diario sin que se convierta en una carga. ¬øTe apuntas?</p>
<h3 id="otras-entradas">Otras entradas</h3>
<ul>
<li><a href="https://mdlcs.dev/posts/2024-04-documentation-i/">No te olvides de la documentaci√≥n (I)</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>No te olvides de la documentaci√≥n (I)</title>
      <link>https://mdlcs.dev/posts/2024-04-documentation-i/</link>
      <pubDate>Sat, 27 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>https://mdlcs.dev/posts/2024-04-documentation-i/</guid>
      <description>Probablemente la palabra &amp;#39;documentaci√≥n&amp;#39; te cause escalofr√≠os y te recuerde momentos tediosos que se interpusieron en tu camino a la felicidad. Esta serie de entradas son una oda a la buena documentaci√≥n y una excusa para descubrir por qu√© la detestamos.</description>
      <content:encoded><![CDATA[<h2 id="-no-me-importa-documentar">üò≤ No me importa documentar</h2>
<p>Hace unos a√±os durante una reuni√≥n rutinaria de equipo, probablemente en una <em>daily</em>, pronunci√© estas controvertidas palabras sobre la finalizaci√≥n de un entregable: <strong><em>&ldquo;no os preocup√©is, yo me encargo, no me importa documentar el proceso&rdquo;</em></strong>.</p>
<p>En ese momento not√© en mis compa√±eros una mezcla de alivio e incredulidad, y se sucedieron muecas de aprobaci√≥n mezcladas con comentarios del tipo: <strong><em>&ldquo;perfecto, porque yo ODIO documentar&rdquo;</em></strong>.</p>
<p>Es obviamente un recuerdo formado por m√°s de una experiencia al respecto pero supongo que me entend√©is. <strong>Documentar no gusta, tiene fama de labor tediosa</strong> y normalmente se desarrolla como colof√≥n a un trabajo m√°s o menos complejo que el equipo tiene muchas ganas de entregar o simplemente dar por finalizado. Es una barrera ante nuestro af√°n de marcar algo como completado.</p>
<p>La realidad es que en ciertos escenarios la documentaci√≥n no es ni siquiera opcional, pero determinadas corrientes de pensamiento nos han hecho ver este acto casi con desprecio, como un ap√©ndice aburrido a nuestro trabajo creativo como desarrolladores de <em>software</em> o, en ocasiones, como una acci√≥n defensiva que nos cataloga como malos profesionales.</p>
<p>Mi intenci√≥n con esta entrada (o serie de entradas, a√∫n no lo he decidido) es desmitificar el proceso y ver la documentaci√≥n con otros ojos. Porque uno puede estar colgado de una cruz pero decidir silbar.</p>
<figure>
    <img loading="lazy" src="images/202404-conspiracy-guy.jpg"
         alt="Meme en el que aparece una persona con aspecto de pertubado mental. La frase dice: &#39;Dejadme a mi que documente la historia de usuario&#39;"/> 
</figure>

<h2 id="-cu√°ndo-nos-acordamos-de-la-documentaci√≥n">üö® ¬øCu√°ndo nos acordamos de la documentaci√≥n?</h2>
<p>Detestamos la documentaci√≥n pero ella, sin rencor, siempre aparece para salvarnos en estas situaciones tan cotidianas: <strong>cuando alguien nuevo llega, cuando alguien importante se va o cuando suena el tel√©fono rojo</strong>:</p>
<ul>
<li>
<p><strong>Onboarding</strong>: Sobre este punto hay muchos y muy buenos art√≠culos y la buena documentaci√≥n s√≥lo es uno de los factores de √©xito. Tras mis √∫ltimos procesos de incorporaci√≥n puedo decir que las piezas de documentaci√≥n m√°s √∫tiles han sido los <strong>organigramas de empresa</strong>, los <strong><em>handbooks</em> actualizados</strong> sobre el d√≠a a d√≠a (vacaciones y ausencias, planes de carrera, etc.) y las <strong>gu√≠as concisas de preparaci√≥n de entornos</strong> u obtenci√≥n de crendenciales. Parecen temas muy comunes pero creedme que hay mundos de distancia entre unas compa√±√≠as y otras.</p>
</li>
<li>
<p><strong>Marcha de compa√±eros a otros equipos o empresas</strong>: En estos casos las alertas se activan normalmente de parte de los gestores o <em>managers</em>. Siempre he notado en estos casos <strong>temores infundados sobre personas que con su marcha puedan llevarse consigo cierta informaci√≥n importante</strong> que no est√° redactada en ning√∫n lugar. Si te pasa o ha pasado, es una mala se√±al, y no vas a solucionarlo escribiendo p√°ginas y p√°ginas en Confluence a √∫ltima hora. M√°s adelante hablar√© de c√≥mo protegerse ante estas situaciones.</p>
</li>
<li>
<p><strong>Incidencias o p√©rdidas de servicio</strong>: Este punto es crucial porque suele ser normal que los equipos de desarrollo no tengan una experiencia perfectamente uniforme y en periodos vacacionales o bajas prolongadas de personal clave puedes encontrarte con <strong>momentos en los que aquella persona que lo solucionaba todo no est√© presente</strong>. Otra bandera roja si me lo permit√≠s, pero que tiene arreglo m√°s all√° de eternos manuales con prodecimientos de arranque, <em>rollback</em> o resoluci√≥n de incidencias.</p>
</li>
</ul>
<h2 id="-siempre-rechazamos-deliberadamente-lo-que-no-nos-motiva">üôÖ Siempre rechazamos deliberadamente lo que no nos motiva</h2>
<p>La paradoja de la documentaci√≥n no queda aqu√≠. Sabemos que en determinados escenarios, como los que he listado en el punto anterior, es fundamental.</p>
<p>Sin embargo, si interpelas directamente a tus compa√±eros y compa√±eras muy posiblemente no encuentres a demasiados que te digan que <em>&ldquo;la documentaci√≥n es in√∫til&rdquo;</em>.</p>
<p>De hecho, seguro que te has encontrado varias veces piezas de documentaci√≥n manifiestamente inservibles pero que el equipo no quiere eliminar porque <strong><em>&ldquo;a lo mejor le sirve a alguien o est√°n all√≠ por alguna raz√≥n&rdquo;</em></strong>. Una especie de <strong>&lsquo;S√≠ndrome de Estocolmo digital&rsquo;</strong> en el que generamos apego por algo que detestamos o que sabemos in√∫til.</p>
<p>Esto me lleva a pensar que, de una manera u otra, <strong>apreciamos el valor intr√≠nseco de la documentaci√≥n pero no la manera de obtener dicho valor</strong>.</p>
<p>Por ello en las siguientes entradas (s√≠, al final habr√° m√°s de una para que el texto no sea un ladrillo incomestible) intentar√© hablar de los mitos asociados a la documentaci√≥n y sobre alguna que otra t√©cnica para hacer del proceso una traves√≠a algo menos desagradable.</p>
<figure>
    <img loading="lazy" src="images/202404-devs-conversation.png"
         alt="Conversaci√≥n entre un desarrollador con experiencia y un junior en el que el primero le dice al segundo que no sabe por qu√© existe determinado documento en la plataforma pero que no lo toque, no vaya a ser..."/> 
</figure>

<h2 id="-en-resumen">‚ûï En resumen</h2>
<p>Nuestra percepci√≥n sobre la documentaci√≥n en el desarrollo de <em>software</em> est√° algo distorsionada.</p>
<p>Aunque muchos la consideran tediosa, en realidad es esencial en momentos clave, como en la integraci√≥n de nuevos empleados o durante incidentes cr√≠ticos. Es curioso c√≥mo, <strong>aunque reconocemos su importancia, pocos est√°n dispuestos a admitirlo abiertamente</strong>.</p>
<p>Y t√∫, ¬øde qu√© equipo eres?</p>
<h3 id="otras-entradas">Otras entradas</h3>
<ul>
<li><a href="https://mdlcs.dev/posts/2025-05-documentation-ii/">No te olvides de la documentaci√≥n (II)</a></li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>El problema de la &#39;deuda t√©cnica&#39;</title>
      <link>https://mdlcs.dev/posts/2024-01-tech-debt/</link>
      <pubDate>Wed, 31 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://mdlcs.dev/posts/2024-01-tech-debt/</guid>
      <description>Tras unos cuantos a√±os en el sector puedo decir que uno de los conceptos que siempre te acompa√±a es el de la deuda t√©cnica. La pregunta que me hago siempre es: ¬øsabemos realmente lo que ES y c√≥mo identificarla?</description>
      <content:encoded><![CDATA[<h2 id="-un-concepto-en-boca-de-todas">üé¨ Un concepto en boca de todas</h2>
<p>Nos encanta hablar de <strong>deuda t√©cnica</strong>. Es un concepto propio, de nuestro nicho de conocimiento.</p>
<p>Pertenezcas a la empresa a la que pertenezcas, sea cual sea el evento IT al que asistas, las conversaciones sobre deuda t√©cnica est√°n ah√≠, a la vuelta de la esquina, acechando, esperando atraparte.</p>
<p>Se tiende a pensar que algo que est√° en boca de todos es materia conocida, bien definida y de dominio p√∫blico. Pero en realidad con este t√©rmino ocurre todo lo contrario, hay tantas cosas que podr√≠an ser deuda t√©cnica que el concepto ha ido perdiendo su esencia, enmascarando otros problemas reales que muchas veces nos averg√ºenza reconocer.</p>
<figure>
    <img loading="lazy" src="images/202401-banner-tech-debt.png"
         alt="Figura con gorro de copa y mon√≥culo con los brazos levantados. R√≥tulo que reza: let&#39;s talk about technical debt"/> 
</figure>

<h2 id="-todo-lo-que-no-es-deuda-t√©cnica">üôÖ‚Äç‚ôÄÔ∏è Todo lo que NO es deuda t√©cnica</h2>
<p>Me encanta intentar definir conceptos desechando al principio caracter√≠sticas probablemente asumidas por todos, pero que se alejan del significado real de la expresi√≥n. Por ello, y siempre bajo mi opini√≥n, paso a enumerar las cosas que considero fuera de los l√≠mites de la deuda t√©cnica.</p>
<h3 id="-bugs">ü™≥ Bugs</h3>
<p>Me atrever√≠a a afirmar que esta es la parte que suscita m√°s consenso. Los <em>bugs</em>, errores, incidencias o c√≥mo quiera que los llames nunca son deuda t√©cnica.</p>
<p>Incluso la existencia de muchos errores tampoco es deuda t√©cnica. Posiblemente pueda ser una consecuencia de ello, pero no m√°s.</p>
<p><strong>Un fallo de nuestro sistema es por definici√≥n inconsciente, no buscado. Por lo tanto, no lo podemos a√±adir a nuestra mochila de mejoras o prop√≥sitos</strong>. Arr√©glalo y pon los medios necesarios para que no vuelva a suceder.</p>
<h3 id="-actualizaci√≥n-de-dependencias">üîÑ Actualizaci√≥n de dependencias</h3>
<p>Algunas de las tareas cl√°sicas en cualquier tablero o <em>backlog</em> de deuda t√©cnica son las de actualizaci√≥n de dependencias, librer√≠as o <em>frameworks</em>.</p>
<p>Entonces, si son tan habituales, ¬øpor qu√© considero que no deber√≠an asociarse al concepto mencionado?</p>
<p>El mundo del desarrollo de <em>software</em> es bastante relativista, antes o despu√©s alguien te dir√° la palabra &ldquo;depende&rdquo; aludiendo a que las decisiones son dependientes del contexto y que en el √°mbito tecnol√≥gico no hay respuestas absolutas o t√©cnicas infalibles. Sin entrar de lleno en la veracidad o no de esta afirmaci√≥n, lo que puedo decir es que <strong>en la programaci√≥n, como en la vida, hay alguna que otra regla casi inviolable y una de ellas es que <em>&ldquo;el software evoluciona y se degenera con el tiempo&rdquo;</em></strong>.</p>
<p>Todo el mundo sabe (espero) que cuando comienzas un nuevo proyecto tendr√°s que mantenerlo: los lenguajes avanzar√°n, los <em>frameworks</em> quedar√°n obsoletos o descubrir√°n vulnerabilidades en tus librer√≠as.</p>
<p>Por ello, tu estrategia de mantenimiento deber√≠a ser un pilar fundamental de tu organizaci√≥n. Si omites deliberadamente estos procesos de actualizaci√≥n con la t√≠pica frase de <em>&ldquo;si funciona no lo toques&rdquo;</em> pero luego apresuras a tu equipo a actualizar vuestros servicios porque <em>&ldquo;dice AWS que dejar√° de dar soporte a la tecnolog√≠a X&rdquo;</em>, el problema no es de deuda t√©cnica, sino de cultura y modos de trabajo.</p>
<figure>
    <img loading="lazy" src="images/202401-banner-phone.png"
         alt="Conversaci√≥n entre el equipo t√©cnico y negocio en la que los primeros alertan de temas t√©cnicos que arreglar y los segundos quieren hablar del ROI asociado"/> 
</figure>

<h3 id="-c√≥digo-heredado">üéÅ C√≥digo heredado</h3>
<p>En mi opini√≥n, surge una controversia al calificar como deuda t√©cnica al c√≥digo de proyectos que, en ocasiones, nos asignan y que no ha sido desarrollado por nuestro equipo.</p>
<p>Frecuentemente, lo que recibimos no cumple con las expectativas de calidad, es dif√≠cil de entender y presenta obst√°culos al agregar nuevas funcionalidades. Esta situaci√≥n es com√∫n y, adem√°s, genera estr√©s y tensi√≥n innecesarios en las personas.</p>
<p>No obstante, estas circunstancias no cumplen con la definici√≥n cl√°sica de deuda t√©cnica, ya que no podemos asumir responsabilidad directa por las acciones y el contexto vivido por otros. <strong>Adem√°s, estos momentos pueden desembocar en un bloqueo operativo que no puede abordarse en peque√±os incrementos durante nuestras iteraciones habituales</strong>.</p>
<p>Es esencial afrontar la calidad y el rendimiento de estos proyectos, pero asignar recursos de manera m√°s espec√≠fica, como la creaci√≥n de grupos de trabajo para tareas de refactorizaci√≥n o la extracci√≥n puntual de funcionalidades hacia otros servicios, puede ser m√°s efectivo.</p>
<h3 id="-mejoras-que-quedaron-en-el-olvido">üíæ Mejoras que quedaron en el olvido</h3>
<p>Otro de los grandes males que asolan a la industria es el exceso de optimismo sobre el tiempo que tendremos para modernizar nuestros productos. Podr√≠a apostar contigo, sin posibilidad de perder, que has estado en alg√∫n proyecto en cuyo <em>backlog</em>, muy en el fondo, resid√≠an tareas de mejora que nunca nadie tuvo tiempo de acometer.</p>
<p>Todos tenemos en mente esos ambiciosos <em>&ldquo;Improve performance&rdquo;</em> o <em>&ldquo;Revamp persistence layer&rdquo;</em> que normalmente tienen unos n√∫meros de tarea en Jira extremadamente bajos y que cre√≥ una hero√≠na desconocida para ti, la cual abandon√≥ la empresa hace a√±o y medio.</p>
<p>¬øEs eso deuda t√©cnica? Me temo que no.</p>
<p><strong>Sin contexto y cercan√≠a temporal, las propuestas de mejora no tienen valor</strong>. Mi consejo es que te armes de voluntad, dejes el apego irracional a un lado y permitas que esas tareas se acomoden tranquilamente en el bulevar de tus sue√±os rotos. Elim√≠nalas y re-analiza el problema sobre la base de las circunstancias actuales. <em>Farewell!</em></p>
<h3 id="-adaptaci√≥n-de-nuevos-acuerdos-de-equipo">ü§ù Adaptaci√≥n de nuevos acuerdos de equipo</h3>
<p>Como √∫ltimo punto quiero destacar como antipatr√≥n de deuda t√©cnica todas aquellas tareas que nacen de cambios en los acuerdos de equipo.</p>
<p>¬øEn serio has propuesto una mejora sin evaluar el impacto y el coste de cambio en tu base de c√≥digo actual? Si la respuesta es afirmativa, deber√≠as repensar tu estrategia.</p>
<p><strong>Todo cambio en las convenciones internas que nos damos nosotros mismos tendr√≠a que tener en cuenta su coste de adopci√≥n</strong>.</p>
<p>Y la justificaci√≥n para alejar estas tareas del t√©rmino &ldquo;deuda t√©cnica&rdquo; es simple: en muchos casos dichas convenciones son una recomendaci√≥n para mejorar la uniformidad del c√≥digo (elecci√≥n entre librer√≠as similares, modo de dise√±ar una API, convenciones de nombres, capas y responsabilidades de la arquitectura), acciones que no presentan una mejora t√©cnica per se, sino m√°s bien una preferencia para dotar a nuestros proyectos de una mayor cohesi√≥n.</p>
<figure>
    <img loading="lazy" src="images/202401-banner-usual-suspects.png"
         alt="Imagen que muestra un mu√±eco de palo por cada una de las 5 secciones de listadas arriba. En la parte inferior hay una l√≠nea de puntos y un texto que dice: usual suspects"/> 
</figure>

<h2 id="-entonces-qu√©-es-la-deuda-t√©cnica">üßê Entonces, ¬øqu√© es la deuda t√©cnica?</h2>
<p>Si tuviese que dar una definici√≥n concisa para mi visi√≥n del concepto de deuda t√©cnica, ser√≠a la que sigue:</p>
<blockquote>
<p>Decisi√≥n de desarrollo u organizaci√≥n que se toma, de manera <strong>deliberada</strong>, como un <strong>atajo</strong> o soluci√≥n de contingencia a un <strong>problema concreto y acotado</strong> y con la que <strong>adquirimos un compromiso</strong> de resoluci√≥n real y <strong>fijado en el tiempo</strong>.</p></blockquote>
<p>Ahora vayamos punto por punto repasando cada una de las caracter√≠sticas:</p>
<ul>
<li><strong>Voluntaria o deliberada</strong>: Bajo mi prisma, no existe la deuda t√©cnica externa. Para que la podamos considerar como tal debe provenir de nosotros mismos en un ejercicio de aceptaci√≥n voluntaria. Por el mismo motivo, no puedo considerar deuda t√©cnica a algo impuesto por un equipo o departamento externo ajeno a responsabilidades t√©cnicas.</li>
<li><strong>Conocida y aceptada</strong>: En el momento de crear la deuda t√©cnica debemos analizar el problema, aceptar la soluci√≥n a tomar como poco adecuada y sobre todo conocer la manera √≥ptima de realizarlo en el futuro (o al menos una propuesta). No podemos admitir como deuda t√©cnica la falta de conocimiento o contexto en un momento pasado.</li>
<li><strong>Compromiso de soluci√≥n</strong>: El punto m√°s odiado. No hay deuda t√©cnica si no existe un compromiso cierto de devoluci√≥n de esa deuda. Como mencionaba antes, si en el fondo de tu <em>backlog</em> se acumulan tareas y m√°s tareas de mejora, no tienes un problema de deuda t√©cnica. Hazme caso, es otra cosa.</li>
<li><strong>De √°mbito reducido</strong>: La deuda tiene que ser concreta para que su resoluci√≥n sea accesible e incluso posible. No podemos considerar como deuda t√©cnica un conjunto de servicios o proyectos completos.</li>
</ul>
<p>El an√°lisis de las caracter√≠sticas de la deuda t√©cnica es importante, ya que de esa manera podremos anticiparnos a sus causas y encontrar soluciones. Tras reflexionar considero que hay tres or√≠genes comunes para este problema y tres soluciones obvias a dichas circunstancias:</p>
<figure>
    <img loading="lazy" src="images/202401-banner-problem-solution.png"
         alt="Diagrama que expone 3 problemas: falta de conocimiento, falta de tiempo y percepci√≥n de valor. Y tres soluciones: formaci√≥n, mejoras organizativas y cultura de empresa"/> 
</figure>

<p>Mi objetivo es exponer el problema y crear un marco de comunicaci√≥n, no aportar estrategias detalladas. Queda de tu mano y de la de tu equipo definir e impulsar las acciones y pr√°cticas necesarias para no caer en el pozo de la deuda t√©cnica.</p>
<h2 id="-por-qu√©-es-importante-llamar-a-las-cosas-por-su-nombre">ü§î ¬øPor qu√© es importante llamar a las cosas por su nombre?</h2>
<p>Asignar con precisi√≥n los conceptos nos conduce a descubrir soluciones m√°s efectivas para los desaf√≠os cotidianos que enfrentamos.</p>
<p>Al revisar la lista anterior de situaciones distintas a la deuda t√©cnica, podemos notar que cada elemento presenta peculiaridades √∫nicas y requiere enfoques diferentes:</p>
<ul>
<li><strong>Errores (Bugs)</strong>: Encarar eficazmente los errores recurrentes implica contar con un s√≥lido <strong>sistema de monitorizaci√≥n u observabilidad</strong> que alerte de manera oportuna sobre incidencias, proyectos con una <strong>buena bater√≠a de tests</strong> y fomentar la <strong>simplicidad</strong> en nuestro dominio.</li>
<li><strong>Actualizaci√≥n de dependencias</strong>: En la actualidad, existen herramientas que facilitan enormemente esta tarea, desde <strong><em>bots</em> que nos alertan sobre nuevas versiones</strong> de nuestras dependencias, hasta sistemas de <strong>detecci√≥n est√°tica y din√°mica de vulnerabilidades</strong>. Es esencial conocer a fondo las tecnolog√≠as que utilizamos y <strong>evitar incluir <em>software</em> de terceros</strong> a menos que sea verdaderamente necesario.</li>
<li><strong>C√≥digo heredado</strong>: No hay soluciones m√°gicas en este punto. Si el c√≥digo heredado es problem√°tico, debemos abordarlo de manera r√°pida y precisa desde el principio, <strong>asignando todos los recursos disponibles</strong>. No esperes lograr frutos sorprendentes con peque√±as mejoras. Los proyectos heredados de baja calidad son una carga para el equipo y pueden dar como resultado la p√©rdida de talento en la empresa. La decisi√≥n est√° en tus manos.</li>
<li><strong>Deuda t√©cnica antigua</strong>: Si las tareas son tan antiguas que desconoces su origen o la persona que report√≥ la incidencia, mi recomendaci√≥n ser√≠a <strong>eliminarlas</strong> directamente, <strong>reconsiderar</strong> la situaci√≥n actual y <strong>crear</strong> nuevas tareas con el contexto actualizado.</li>
<li><strong>Nuevos acuerdos</strong>: En el √°mbito de los nuevos acuerdos, siempre es efectivo implementar medidas que dificulten su incumplimiento. Esto puede lograrse mediante la creaci√≥n de <strong>tests de arquitectura</strong>, el uso de <strong>herramientas de <em>linting</em></strong> correctamente configuradas, la promoci√≥n de t√©cnicas de trabajo como el <strong><em>pair/mob programming</em></strong>, o la adopci√≥n de una <strong>cultura de refactorizaci√≥n</strong> que no requiera la creaci√≥n expl√≠cita de tareas para su realizaci√≥n.</li>
</ul>
<h2 id="-en-resumen">‚ûï En resumen</h2>
<p>El concepto <strong>&ldquo;deuda t√©cnica&rdquo;</strong> en el desarrollo de <em>software</em> ha perdido su esencia. Durante mucho tiempo se ha utilizado sistem√°ticamente de manera incorrecta para describir problemas que no son compromisos propios.</p>
<p>Considero que los errores, las actualizaciones de dependencias, las mejoras pendientes, el c√≥digo heredado o los cambios en acuerdos de equipo no son deuda t√©cnica. Y propongo una definici√≥n m√°s precisa: <strong>una decisi√≥n voluntaria que implica un compromiso fijado en el tiempo para resolver un problema espec√≠fico</strong>. Catalogar correctamente los conceptos es crucial para encontrar soluciones adecuadas y evitar malentendidos en el desarrollo de <em>software</em>.</p>
<p>Por √∫ltimo, y ya que al tratar sobre estos conceptos siempre se usan s√≠miles econ√≥micos, me gustar√≠a acabar con una cita de <strong>David Graeber</strong> de su libro <em>En deuda</em>, que al hablar sobre su cancelaci√≥n dice:</p>
<blockquote>
<p>&hellip; recordarnos a nosotros mismos que el dinero no es inefable, que pagar las deudas no es la esencia de la moral, que todo esto son cosas que hemos decidido hacer de determinada manera los humanos y que, si algo significa la democracia, es la capacidad de ponernos de acuerdo entre todos para hacer las cosas de otra manera.</p></blockquote>
<p>Espero que te haya gustado. Si es as√≠, estamos en deuda.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>¬øTienes alguna pregunta para nosotros?</title>
      <link>https://mdlcs.dev/posts/2024-01-interview-questions/</link>
      <pubDate>Fri, 05 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://mdlcs.dev/posts/2024-01-interview-questions/</guid>
      <description>En todo proceso de entrevistas siempre llega el momento crucial en el que puedes (debes) realizar preguntas para conocer mejor a tu futuro empleador. Esta es la lista que siempre tengo a mano para inspirarme a la hora de preguntar y as√≠ descubrir los puntos fuertes y d√©biles de la oferta a la que me presento.</description>
      <content:encoded><![CDATA[<h2 id="-lvl01---preguntas-b√°sicas">üê• LVL.01 - Preguntas b√°sicas</h2>
<p>Las preguntas que listo a continuaci√≥n no deber√≠an formar parte del proceso de entrevistas sino de la descripci√≥n de la oferta a la que uno se presenta. Si me apur√°is, deber√≠a haber legislaci√≥n al respecto para que estos datos sean parte obligatoria en la descripci√≥n de cualquier empleo.</p>
<blockquote>
<ul>
<li><strong>Modo</strong>: ¬øPresencial, h√≠brido, teletrabajo, trabajo remoto?</li>
<li><strong>Salario</strong>: ¬øC√∫al es el rango salarial de la oferta? ¬øHay bonificaciones variables?</li>
<li><strong>Vacaciones</strong>: ¬øCu√°ntos d√≠as de vacaciones ofrece la empresa? ¬øHay d√≠as especiales de vacaciones: cumplea√±os, nochebuena y/o nochevieja, libre disposici√≥n, conciliaci√≥n?</li>
<li><strong>Beneficios</strong>: ¬øFormaci√≥n, seguro m√©dico, ticket restaurante, clases de ingl√©s, presupuesto para trabajo remoto, asistencia a eventos IT, otros?</li>
</ul></blockquote>
<p>Menci√≥n especial a las ofertas con rangos salariales ampl√≠simos o con valores indeterminados del tipo &ldquo;seg√∫n val√≠a&rdquo;. No recomiendo aceptar una respuesta de este tipo ya que se podr√≠a considerar una falta de respeto a vuestro inter√©s por la oferta o a vuestro tiempo libre. Y por experiencia, no se√°is los primeros en comunicar expectativas salariales en el caso de no contar con esa informaci√≥n.</p>
<figure>
    <img loading="lazy" src="images/202401-meme-interviews.jpg"
         alt="Dos monos luchando a cuchillo" width="auto"/> 
</figure>

<h2 id="-lvl02---c√≥mo-es-el-trabajo-en-el-d√≠a-a-d√≠a">üïµÔ∏è‚Äç‚ôÄÔ∏è LVL.02 - ¬øC√≥mo es el trabajo en el d√≠a a d√≠a?</h2>
<p>En el siguiente nivel es fundamental entender el d√≠a a d√≠a en el posible nuevo puesto de trabajo, as√≠ como conocer cuestiones b√°sicas del funcionamiento de la empresa.</p>
<p>Comenzar a trabajar en un lugar nuevo nos lleva a tratar con nuevas personas y forjar relaciones entre diferentes departamentos, por ello, los flujos de comunicaci√≥n son determinantes.</p>
<blockquote>
<ul>
<li><strong>Horario</strong>: ¬øCu√°l es el horario de trabajo m√°s habitual? ¬øSe realizan horarios especiales intensivos: viernes, meses de verano, navidad?</li>
<li><strong>D√≠a de trabajo</strong>: ¬øPodr√≠as describir como ser√≠a un d√≠a t√≠pico trabajando en el proyecto (reuniones, tiempo de foco para trabajar)?</li>
<li><strong>Onboarding</strong>: ¬øC√≥mo ser√° mi proceso de <em>onboarding</em>?</li>
<li><strong>Evoluci√≥n y responsabilidades</strong>: ¬øQu√© esper√°is de la persona que opte al puesto que est√°is ofertando? ¬øCu√°l es la evoluci√≥n √≥ptima que manej√°is?</li>
<li><strong>Otros equipos</strong>: ¬øSe dispone de un equipo de sistemas / plataforma / QA / incidencias independiente? ¬øTen√©is roles transversales en tecnolog√≠a (<em>engineering manager</em>, <em>solutions architect</em>, &hellip;)?</li>
<li><strong>Retos empresa</strong>: ¬øCu√°l es el reto actual m√°s importante al que se enfrenta el equipo / departamento / empresa?</li>
<li><strong>Eventos</strong>: ¬øHay reuniones recurrentes del tipo <em>&lsquo;company meeting&rsquo;</em> o <em>&rsquo;team building&rsquo;</em>? ¬øC√≥mo suelen ser? ¬øCon qu√© periodicidad? ¬øSe pueden rechazar?</li>
<li><strong>Viajes</strong>: ¬øSe hace cargo la empresa de los gastos y la reserva de transporte/alojamiento cuando hay que viajar?</li>
</ul></blockquote>
<p>Con este bloque de peguntas pretendo conocer c√≥mo de engrasada est√° la maquinaria burocr√°tica. Cuesta aceptar a veces que determinados problemas de productividad nacen de procesos extremadamente tediosos o poco afinados, exceso de reuniones o <em>micro-management</em>. A este respecto la <a href="https://es.wikipedia.org/wiki/Ley_de_Conway">Ley de Conway</a> sigue plenamente vigente.</p>
<figure>
    <img loading="lazy" src="images/202401-meme-meetings.jpg"
         alt="Individuo frente al ordenador con cara de circunstancias. La imagen dice: Primer d√≠a de trabajo... Tienes 438 nuevas reuniones" width="auto"/> 
</figure>

<h2 id="-lvl03---descubre-aquello-que-no-te-quieren-contar">ü§´ LVL.03 - Descubre aquello que no te quieren contar</h2>
<p>En este √∫ltimo bloque me reservo un conjunto de preguntas algo m√°s controvertidas que en muchos casos las empresas ofertantes de empleo suelen &rsquo;evitar&rsquo;.</p>
<p>Como asistente a numerosos eventos del sector IT uno siempre encuentra que las compa√±√≠as promocionan aquello de lo que se sienten orgullosas pero omiten deliberadamente informaci√≥n muy importante que puede llegar a impactar directamente en tu calidad de vida.</p>
<p>De nada sirve que anuncies a bombo y platillo tus 7 cl√∫sters de Kubernetes si despu√©s tus empleados tienen equipos inform√°ticos con 4GB de RAM o si van a recibir 5 llamadas cada madrugada cuando est√©n de <em>oncall</em>.</p>
<blockquote>
<ul>
<li><strong>Guardias</strong>: ¬øHay guardias? ¬øActivas o pasivas? ¬øCon qu√© periodicidad? ¬øCu√°l es la compensaci√≥n extra por realizarlas? ¬øCu√°ntas incidencias se notifican de media por semana / mes?</li>
<li><strong>Hardware</strong>: ¬øCu√°les son las herramientas <em>hardware</em> para trabajar? ¬øSe trabaja a trav√©s de un equipo compartido? ¬øSe dispone de sistemas como VPN o SSO?</li>
<li><strong>Software</strong>: ¬øCu√°les son las licencias <em>software</em> de servicios o herramientas (IntelliJ, Postman, etc) que utiliz√°is en el d√≠a a d√≠a?</li>
<li><strong>Rotaci√≥n y promoci√≥n</strong>: ¬øCu√°l es la antig√ºedad media de los miembros en plantilla o en el equipo? ¬øDispon√©is de planes de movilidad interna dentro de la empresa? ¬øC√≥mo funcionan los procesos de promoci√≥n?</li>
<li><strong>Observabilidad</strong>: ¬øQu√© <em>software</em> de observabilidad ten√©is? ¬øQu√© m√©tricas manej√°is en el d√≠a a d√≠a?</li>
<li><strong>Estrategia y planificaci√≥n</strong>: ¬øQui√©n decide o prioriza la estrategia de negocio? ¬øCada cu√°nto cambia o se re-analiza? ¬ø<em>North Star</em> para el equipo / departamento / compa√±√≠a?</li>
<li><strong>Outboarding</strong>: ¬øTen√©is proceso de <em>outboarding</em>? ¬øC√≥mo gestion√°is la marcha de empleados?</li>
<li><strong>Documentaci√≥n</strong>: ¬øCu√°l es vuestra estrategia de documentaci√≥n? ¬øC√≥mo os asegur√°is de que el conocimiento se comparte y llega a diferentes √°reas de la empresa? ¬øCuid√°is vuestro lenguaje ubicuo? ¬øC√≥mo luch√°is contra los silos de informaci√≥n?</li>
<li><strong>Cultura de equipo</strong>: Estrategia de <em>testing</em> / <em>branching model</em>, tiempo de formaci√≥n o mejora continua, <em>feedback</em> interno, plan de carrera.</li>
</ul></blockquote>
<p>Por experiencia, muchas de estas preguntas descolocan y derivan en situaciones tensas e incluso desagradables durante las entrevistas. Mi objetivo es que manej√©is ejemplos sobre qu√© preguntar cuando teng√°is dudas fundadas en alg√∫n aspecto clave.</p>
<p>En mi humilde opini√≥n, habiendo estado en ambos lados de un proceso de contrataci√≥n, la formulaci√≥n de preguntas denota inter√©s por el puesto y nunca deber√≠a ser considerada un ataque.</p>
<figure>
    <img loading="lazy" src="images/202401-meme-incidents.jpg"
         alt="Perrete sospecha que est√°s mintiendo sobre las incidencias reales que hay durante las guardias"/> 
</figure>

<h2 id="-en-resumen">‚ûï En resumen</h2>
<p>Una entrevista deber√≠a ser algo as√≠ como <strong>una conversaci√≥n amistosa entre dos partes interesadas en compartir un futuro laboral</strong>. En dicho proceso es fundamental hacer preguntas para conocer detalles sobre el puesto que te est√°n ofertando.</p>
<p>Mi recomendaci√≥n es que te prepares intentando <strong>conocer informaci√≥n b√°sica de la empresa</strong> para la que te postulas y que seas <strong>honesto y cercano durante las entrevistas</strong>. No te olvides tampoco de <strong>tomar notas</strong> sobre todo lo que te compartan en las diferentes fases de un proceso de selecci√≥n.</p>
<p>Y cuando llege ese momento de <em>&quot;¬øTienes alguna pregunta para nosotros?&quot;</em>, ya sabes lo que hacer. Pregunta.</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
