[{"content":"ü§∑üèΩ‚Äç‚ôÄÔ∏è Tenemos claro que no nos gusta pero, ¬øqu√© es documentar? En la entrada anterior habl√© de la visi√≥n distorsionada que a veces tenemos sobre la tarea de documentar. Ese doble filo en el que admitimos su utilidad en momentos clave pero que nos hace rechazarla por el mero hecho de no tener interiorizadas maneras de trabajar que incluyan su creaci√≥n y evoluci√≥n como uno de los pilares de nuestro d√≠a a d√≠a.\nCon el paso de los a√±os he estado en m√∫ltiples discusiones al respecto de este tema, pero √∫ltimamente me asalta una pregunta: ¬øhemos consensuado realmente lo que ES documentar? Personalmente no tengo una respuesta cien por cien absoluta, por ello en este art√≠culo me centrar√© en explicar los distintos tipos de documentaci√≥n que existen y todos aquellos mitos asociados a su creaci√≥n y mantenimiento.\nü©∏ Algunos tipos de documentaci√≥n Admito que es dif√≠cil a veces el \u0026ldquo;ver m√°s all√°\u0026rdquo; de la documentaci√≥n pura y dura que podemos consumir en nuestro d√≠a a d√≠a. Si hago un ejercicio mental simple, lo primero que me viene a la mente al pensar en documentaci√≥n son p√°ginas y p√°ginas infumables en Redmine, de autor desconocido, pero que todos temen eliminar. Lo cierto es que la documentaci√≥n es mucho m√°s, por ello paso a listar lo que para mi son sus distintos tipos:\nGestores de documentaci√≥n interna: Normalmente conocidos como \u0026ldquo;el Notion o el Confluence\u0026rdquo; este tipo de plataformas se convierten en el punto central de la documentaci√≥n de un proyecto o empresa. Suelen albergar toda clase de informaci√≥n, desde onboarding hasta arquitecturas y decisiones t√©cnicas, pasando por procedimientos y gu√≠as. El problema habitual es que terminan convirti√©ndose en cementerios de informaci√≥n desactualizada.\nPlataforma de gesti√≥n de tareas: Sin lugar a dudas el software de gesti√≥n de tareas que usemos en nuestra organizaci√≥n es una fuente de documentaci√≥n\u0026hellip; cuando decidimos agregar informaci√≥n relevante a nuestras historias de usuario o tareas. Aqu√≠ reside un tipo de documentaci√≥n extremadamente valiosa: el contexto, los criterios de aceptaci√≥n, las decisiones que se tomaron durante el desarrollo. Lamentablemente, muchas veces nos limitamos a t√≠tulos escuetos y descripciones austeras.\nEst√°ndares de documentaci√≥n t√©cnica: Herramientas como JavaDoc, OpenAPI/Swagger, AsciiDoc entre otros representan una aproximaci√≥n controlada a la documentaci√≥n de c√≥digo y APIs. Estos est√°ndares permiten generar documentaci√≥n t√©cnica de forma automatizada, pero requieren un esfuerzo constante de mantenimiento por parte del equipo.\nTareas automatizadas: Los scripts, pipelines CI/CD, tests automatizados y Makefiles son formas de documentaci√≥n ejecutable. Un buen Makefile o un pipeline bien configurado no solo facilita los procesos repetitivos, sino que tambi√©n documenta c√≥mo se realizan determinadas acciones en el proyecto. Los tests, especialmente los de aceptaci√≥n o los e2e, pueden ser excelentes formas de documentar el comportamiento esperado del sistema.\nC√≥digo: El propio c√≥digo es, en s√≠ mismo, una forma de documentaci√≥n. Los nombres de clases, m√©todos y variables bien elegidos, la estructura del proyecto y los patrones de dise√±o aplicados comunican intenciones y decisiones. Un c√≥digo bien estructurado y con nombres significativos puede reducir la necesidad de documentaci√≥n adicional. Sin embargo, el c√≥digo nos dice el \u0026ldquo;c√≥mo\u0026rdquo; pero no siempre el \u0026ldquo;por qu√©\u0026rdquo; de las decisiones tomadas.\nDocumentaci√≥n externa oficial y no oficial: Las documentaciones de APIs, gu√≠as, ejemplos, respuestas en Stack Overflow (mientras dure tras el auge de la IA) o art√≠culos en blogs como Baeldung forman parte de nuestro ecosistema documental d√≠a a d√≠a. A menudo dependemos m√°s de estos recursos externos que de nuestra propia documentaci√≥n interna, lo que puede ser problem√°tico cuando nuestro contexto espec√≠fico difiere del general.\nHerramientas de IA generativa: En los √∫ltimos a√±os, estas herramientas han revolucionado la forma en que interactuamos con la documentaci√≥n. Pueden ayudarnos a generar, resumir o explicar documentaci√≥n existente. Sin embargo, tambi√©n plantean desaf√≠os: ¬øEstamos delegando demasiado el conocimiento del d√≠a d√≠a a sistemas externos?, ¬øRealmente entendemos lo que estas herramientas nos explican? A pesar de su utilidad, no deber√≠an reemplazar la creaci√≥n de documentaci√≥n contextualizada para nuestros proyectos.\nüéØ Cazadores de mitos La pregunta obvia ser√≠a, ¬øc√≥mo hemos llegado hasta aqu√≠?\nEn este sentido creo que la industria se ha visto influenciada por opiniones, mitos o creencias que no est√°n del todo fundadas, todo ello bien regado con el sesgo de autoridad que ciertas voces destilan.\nAgile manifesto Con el tiempo he llegado a la conclusi√≥n de que pocas reuniones en Utah han tenido un impacto tan negativo en una industria mil millonaria como es la del desarrollo de software. Lo que comenz√≥ con una serie de valores y principios necesarios, se ha transformado a√±o tras a√±o en una bola de nieve de convenciones totalmente malinterpretadas.\nDos frases tienen la culpa:\nWorking software over comprehensive documentation\nThe most efficient and effective method of conveying information to and within a development team is face-to-face conversation.\nDe manera aislada ambas afirmaciones tienen valor y su esencia es aplicable a√∫n a d√≠a de hoy. El verdadero problema es que muchos equipos han interpretado estos principios como \u0026ldquo;la documentaci√≥n es mala\u0026rdquo; o \u0026ldquo;no documentemos nada, con hablar es suficiente\u0026rdquo;.\nLo que el manifiesto √°gil realmente propon√≠a era priorizar el software funcional sobre extensos documentos que nadie lee, y favorecer la comunicaci√≥n directa como m√©todo principal de transmisi√≥n de informaci√≥n. Nunca sugiri√≥ eliminar la documentaci√≥n por completo.\nLa realidad es que necesitamos un equilibrio. La comunicaci√≥n cara a cara es ef√≠mera, se pierde con el tiempo y depende de la memoria humana, que es como m√≠nimo imperfecta. Una documentaci√≥n concisa, actualizada y contextualizada complementa perfectamente la comunicaci√≥n directa.\nClean Code y el c√≥digo autodocumentado La otra corriente que nos ha llevado a odiar la documentaci√≥n es el dogma del c√≥digo limpio. ¬øEso quiere decir que estoy a favor del \u0026ldquo;c√≥digo sucio\u0026rdquo;? En absoluto.\nEl problema con las reglas que se derivan del movimiento de Clean Code es su aplicaci√≥n ortodoxa sin considerar el contexto. Una de las m√°ximas m√°s repetidas es que \u0026ldquo;el buen c√≥digo se documenta a s√≠ mismo\u0026rdquo; y que \u0026ldquo;si tienes que comentar tu c√≥digo, es que no est√° bien escrito\u0026rdquo;.\nEstas afirmaciones, aunque bien intencionadas, han llevado a muchos desarrolladores a evitar cualquier tipo de comentario o documentaci√≥n en el c√≥digo, incluso en ocasiones en las cuales ser√≠a beneficioso. El c√≥digo puede explicar el \u0026ldquo;c√≥mo\u0026rdquo; a trav√©s de nombres descriptivos y estructura clara, pero rara vez explica el \u0026ldquo;por qu√©\u0026rdquo; detr√°s de determinadas decisiones.\nUn buen equilibrio podr√≠a ser:\nC√≥digo limpio y autodescriptivo para el \u0026ldquo;c√≥mo\u0026rdquo;. Comentarios estrat√©gicos para explicar el \u0026ldquo;por qu√©\u0026rdquo; cuando no es obvio. Documentaci√≥n externa para visiones m√°s amplias, arquitectura y contexto. Pero no nos adelantemos.\nHazlo todo al final Otro mito destructivo es que la documentaci√≥n debe hacerse al final del proyecto o desarrollo. Este enfoque garantiza pr√°cticamente que la documentaci√≥n:\nNo se har√° nunca (porque siempre hay otra tarea o proyecto esperando) Ser√° incompleta (porque los detalles se han olvidado) Ser√° vista como una carga sin valor real. La documentaci√≥n deber√≠a ser parte integral del proceso de desarrollo, no un ap√©ndice. Cuando se crea incrementalmente durante el desarrollo, refleja con mayor precisi√≥n las decisiones tomadas y el contexto en que se tomaron. Adem√°s, este enfoque distribuye la carga de trabajo y hace que la documentaci√≥n sea menos propensa al rechazo.\nUna estrategia efectiva es documentar las decisiones importantes justo cuando se toman, mientras el razonamiento est√° fresco en la mente. Herramientas como los Registros de Decisiones Arquitect√≥nicas (ADR), de las que hablaremos en otro momento, son perfectas para esto.\nLa documentaci√≥n no evoluciona Este √∫ltimo mito es quiz√°s el m√°s da√±ino: la idea de que la documentaci√≥n es est√°tica, un artefacto inmutable que, una vez creado, permanece igual hasta que se vuelve obsoleto y se descarta.\nEn realidad, la documentaci√≥n valiosa evoluciona junto con el c√≥digo y el producto. Deber√≠a ser tratada como un producto vivo que requiere mantenimiento, actualizaciones y ocasionalmente refactorizaciones completas. La documentaci√≥n desactualizada es a menudo peor que la ausencia de documentaci√≥n, ya que induce a numerosos errores.\nEn equipos maduros, la evoluci√≥n de la documentaci√≥n deber√≠a estar tan automatizada e integrada en el proceso como el propio desarrollo. O al menos esa es mi visi√≥n de idealista irredento.\n‚ûï En resumen La documentaci√≥n no tiene por qu√© ser un mal necesario o una pesada carga administrativa. Cuando se enfoca correctamente, es una herramienta poderosa que mejora la colaboraci√≥n, preserva el conocimiento de nuestros proyectos y acelera la incorporaci√≥n de nuevos miembros al equipo.\nLos mitos que nos han llevado a despreciar la documentaci√≥n son precisamente eso, mitos. El manifiesto √°gil no proh√≠be documentar, el c√≥digo limpio no elimina la necesidad de explicar el \u0026ldquo;por qu√©\u0026rdquo;, y la documentaci√≥n no es algo que se hace al final ni permanece est√°tica.\nUn enfoque equilibrado hacia la documentaci√≥n empieza por reconocer su valor como parte fundamental del proceso de desarrollo, no como un complemento opcional. Al igual que cuidamos nuestro c√≥digo, debemos cuidar nuestra documentaci√≥n: mantenerla concisa, actualizada y √∫til.\nEn la pr√≥xima entrada, explorar√© algunas estrategias pr√°cticas para integrar la documentaci√≥n en el flujo de trabajo diario sin que se convierta en una carga. ¬øTe apuntas?\nOtras entradas No te olvides de la documentaci√≥n (I) ","permalink":"https://mdlcs.dev/posts/2025-05-documentation-ii/","summary":"\u003ch2 id=\"-tenemos-claro-que-no-nos-gusta-pero-qu√©-es-documentar\"\u003eü§∑üèΩ‚Äç‚ôÄÔ∏è Tenemos claro que no nos gusta pero, ¬øqu√© es documentar?\u003c/h2\u003e\n\u003cp\u003eEn la entrada anterior habl√© de la visi√≥n distorsionada que a veces tenemos sobre la tarea de documentar. Ese doble filo en el que \u003cstrong\u003eadmitimos su utilidad en momentos clave pero que nos hace rechazarla\u003c/strong\u003e por el mero hecho de no tener interiorizadas maneras de trabajar que incluyan su creaci√≥n y evoluci√≥n como uno de los pilares de nuestro d√≠a a d√≠a.\u003c/p\u003e","title":"No te olvides de la documentaci√≥n (II)"},{"content":"üò≤ No me importa documentar Hace unos a√±os durante una reuni√≥n rutinaria de equipo, probablemente en una daily, pronunci√© estas controvertidas palabras sobre la finalizaci√≥n de un entregable: \u0026ldquo;no os preocup√©is, yo me encargo, no me importa documentar el proceso\u0026rdquo;.\nEn ese momento not√© en mis compa√±eros una mezcla de alivio e incredulidad, y se sucedieron muecas de aprobaci√≥n mezcladas con comentarios del tipo: \u0026ldquo;perfecto, porque yo ODIO documentar\u0026rdquo;.\nEs obviamente un recuerdo formado por m√°s de una experiencia al respecto pero supongo que me entend√©is. Documentar no gusta, tiene fama de labor tediosa y normalmente se desarrolla como colof√≥n a un trabajo m√°s o menos complejo que el equipo tiene muchas ganas de entregar o simplemente dar por finalizado. Es una barrera ante nuestro af√°n de marcar algo como completado.\nLa realidad es que en ciertos escenarios la documentaci√≥n no es ni siquiera opcional, pero determinadas corrientes de pensamiento nos han hecho ver este acto casi con desprecio, como un ap√©ndice aburrido a nuestro trabajo creativo como desarrolladores de software o, en ocasiones, como una acci√≥n defensiva que nos cataloga como malos profesionales.\nMi intenci√≥n con esta entrada (o serie de entradas, a√∫n no lo he decidido) es desmitificar el proceso y ver la documentaci√≥n con otros ojos. Porque uno puede estar colgado de una cruz pero decidir silbar.\nüö® ¬øCu√°ndo nos acordamos de la documentaci√≥n? Detestamos la documentaci√≥n pero ella, sin rencor, siempre aparece para salvarnos en estas situaciones tan cotidianas: cuando alguien nuevo llega, cuando alguien importante se va o cuando suena el tel√©fono rojo:\nOnboarding: Sobre este punto hay muchos y muy buenos art√≠culos y la buena documentaci√≥n s√≥lo es uno de los factores de √©xito. Tras mis √∫ltimos procesos de incorporaci√≥n puedo decir que las piezas de documentaci√≥n m√°s √∫tiles han sido los organigramas de empresa, los handbooks actualizados sobre el d√≠a a d√≠a (vacaciones y ausencias, planes de carrera, etc.) y las gu√≠as concisas de preparaci√≥n de entornos u obtenci√≥n de crendenciales. Parecen temas muy comunes pero creedme que hay mundos de distancia entre unas compa√±√≠as y otras.\nMarcha de compa√±eros a otros equipos o empresas: En estos casos las alertas se activan normalmente de parte de los gestores o managers. Siempre he notado en estos casos temores infundados sobre personas que con su marcha puedan llevarse consigo cierta informaci√≥n importante que no est√° redactada en ning√∫n lugar. Si te pasa o ha pasado, es una mala se√±al, y no vas a solucionarlo escribiendo p√°ginas y p√°ginas en Confluence a √∫ltima hora. M√°s adelante hablar√© de c√≥mo protegerse ante estas situaciones.\nIncidencias o p√©rdidas de servicio: Este punto es crucial porque suele ser normal que los equipos de desarrollo no tengan una experiencia perfectamente uniforme y en periodos vacacionales o bajas prolongadas de personal clave puedes encontrarte con momentos en los que aquella persona que lo solucionaba todo no est√© presente. Otra bandera roja si me lo permit√≠s, pero que tiene arreglo m√°s all√° de eternos manuales con prodecimientos de arranque, rollback o resoluci√≥n de incidencias.\nüôÖ Siempre rechazamos deliberadamente lo que no nos motiva La paradoja de la documentaci√≥n no queda aqu√≠. Sabemos que en determinados escenarios, como los que he listado en el punto anterior, es fundamental.\nSin embargo, si interpelas directamente a tus compa√±eros y compa√±eras muy posiblemente no encuentres a demasiados que te digan que \u0026ldquo;la documentaci√≥n es in√∫til\u0026rdquo;.\nDe hecho, seguro que te has encontrado varias veces piezas de documentaci√≥n manifiestamente inservibles pero que el equipo no quiere eliminar porque \u0026ldquo;a lo mejor le sirve a alguien o est√°n all√≠ por alguna raz√≥n\u0026rdquo;. Una especie de \u0026lsquo;S√≠ndrome de Estocolmo digital\u0026rsquo; en el que generamos apego por algo que detestamos o que sabemos in√∫til.\nEsto me lleva a pensar que, de una manera u otra, apreciamos el valor intr√≠nseco de la documentaci√≥n pero no la manera de obtener dicho valor.\nPor ello en las siguientes entradas (s√≠, al final habr√° m√°s de una para que el texto no sea un ladrillo incomestible) intentar√© hablar de los mitos asociados a la documentaci√≥n y sobre alguna que otra t√©cnica para hacer del proceso una traves√≠a algo menos desagradable.\n‚ûï En resumen Nuestra percepci√≥n sobre la documentaci√≥n en el desarrollo de software est√° algo distorsionada.\nAunque muchos la consideran tediosa, en realidad es esencial en momentos clave, como en la integraci√≥n de nuevos empleados o durante incidentes cr√≠ticos. Es curioso c√≥mo, aunque reconocemos su importancia, pocos est√°n dispuestos a admitirlo abiertamente.\nY t√∫, ¬øde qu√© equipo eres?\nOtras entradas No te olvides de la documentaci√≥n (II) ","permalink":"https://mdlcs.dev/posts/2024-04-documentation-i/","summary":"\u003ch2 id=\"-no-me-importa-documentar\"\u003eüò≤ No me importa documentar\u003c/h2\u003e\n\u003cp\u003eHace unos a√±os durante una reuni√≥n rutinaria de equipo, probablemente en una \u003cem\u003edaily\u003c/em\u003e, pronunci√© estas controvertidas palabras sobre la finalizaci√≥n de un entregable: \u003cstrong\u003e\u003cem\u003e\u0026ldquo;no os preocup√©is, yo me encargo, no me importa documentar el proceso\u0026rdquo;\u003c/em\u003e\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eEn ese momento not√© en mis compa√±eros una mezcla de alivio e incredulidad, y se sucedieron muecas de aprobaci√≥n mezcladas con comentarios del tipo: \u003cstrong\u003e\u003cem\u003e\u0026ldquo;perfecto, porque yo ODIO documentar\u0026rdquo;\u003c/em\u003e\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eEs obviamente un recuerdo formado por m√°s de una experiencia al respecto pero supongo que me entend√©is. \u003cstrong\u003eDocumentar no gusta, tiene fama de labor tediosa\u003c/strong\u003e y normalmente se desarrolla como colof√≥n a un trabajo m√°s o menos complejo que el equipo tiene muchas ganas de entregar o simplemente dar por finalizado. Es una barrera ante nuestro af√°n de marcar algo como completado.\u003c/p\u003e","title":"No te olvides de la documentaci√≥n (I)"},{"content":"üé¨ Un concepto en boca de todas Nos encanta hablar de deuda t√©cnica. Es un concepto propio, de nuestro nicho de conocimiento.\nPertenezcas a la empresa a la que pertenezcas, sea cual sea el evento IT al que asistas, las conversaciones sobre deuda t√©cnica est√°n ah√≠, a la vuelta de la esquina, acechando, esperando atraparte.\nSe tiende a pensar que algo que est√° en boca de todos es materia conocida, bien definida y de dominio p√∫blico. Pero en realidad con este t√©rmino ocurre todo lo contrario, hay tantas cosas que podr√≠an ser deuda t√©cnica que el concepto ha ido perdiendo su esencia, enmascarando otros problemas reales que muchas veces nos averg√ºenza reconocer.\nüôÖ‚Äç‚ôÄÔ∏è Todo lo que NO es deuda t√©cnica Me encanta intentar definir conceptos desechando al principio caracter√≠sticas probablemente asumidas por todos, pero que se alejan del significado real de la expresi√≥n. Por ello, y siempre bajo mi opini√≥n, paso a enumerar las cosas que considero fuera de los l√≠mites de la deuda t√©cnica.\nü™≥ Bugs Me atrever√≠a a afirmar que esta es la parte que suscita m√°s consenso. Los bugs, errores, incidencias o c√≥mo quiera que los llames nunca son deuda t√©cnica.\nIncluso la existencia de muchos errores tampoco es deuda t√©cnica. Posiblemente pueda ser una consecuencia de ello, pero no m√°s.\nUn fallo de nuestro sistema es por definici√≥n inconsciente, no buscado. Por lo tanto, no lo podemos a√±adir a nuestra mochila de mejoras o prop√≥sitos. Arr√©glalo y pon los medios necesarios para que no vuelva a suceder.\nüîÑ Actualizaci√≥n de dependencias Algunas de las tareas cl√°sicas en cualquier tablero o backlog de deuda t√©cnica son las de actualizaci√≥n de dependencias, librer√≠as o frameworks.\nEntonces, si son tan habituales, ¬øpor qu√© considero que no deber√≠an asociarse al concepto mencionado?\nEl mundo del desarrollo de software es bastante relativista, antes o despu√©s alguien te dir√° la palabra \u0026ldquo;depende\u0026rdquo; aludiendo a que las decisiones son dependientes del contexto y que en el √°mbito tecnol√≥gico no hay respuestas absolutas o t√©cnicas infalibles. Sin entrar de lleno en la veracidad o no de esta afirmaci√≥n, lo que puedo decir es que en la programaci√≥n, como en la vida, hay alguna que otra regla casi inviolable y una de ellas es que \u0026ldquo;el software evoluciona y se degenera con el tiempo\u0026rdquo;.\nTodo el mundo sabe (espero) que cuando comienzas un nuevo proyecto tendr√°s que mantenerlo: los lenguajes avanzar√°n, los frameworks quedar√°n obsoletos o descubrir√°n vulnerabilidades en tus librer√≠as.\nPor ello, tu estrategia de mantenimiento deber√≠a ser un pilar fundamental de tu organizaci√≥n. Si omites deliberadamente estos procesos de actualizaci√≥n con la t√≠pica frase de \u0026ldquo;si funciona no lo toques\u0026rdquo; pero luego apresuras a tu equipo a actualizar vuestros servicios porque \u0026ldquo;dice AWS que dejar√° de dar soporte a la tecnolog√≠a X\u0026rdquo;, el problema no es de deuda t√©cnica, sino de cultura y modos de trabajo.\nüéÅ C√≥digo heredado En mi opini√≥n, surge una controversia al calificar como deuda t√©cnica al c√≥digo de proyectos que, en ocasiones, nos asignan y que no ha sido desarrollado por nuestro equipo.\nFrecuentemente, lo que recibimos no cumple con las expectativas de calidad, es dif√≠cil de entender y presenta obst√°culos al agregar nuevas funcionalidades. Esta situaci√≥n es com√∫n y, adem√°s, genera estr√©s y tensi√≥n innecesarios en las personas.\nNo obstante, estas circunstancias no cumplen con la definici√≥n cl√°sica de deuda t√©cnica, ya que no podemos asumir responsabilidad directa por las acciones y el contexto vivido por otros. Adem√°s, estos momentos pueden desembocar en un bloqueo operativo que no puede abordarse en peque√±os incrementos durante nuestras iteraciones habituales.\nEs esencial afrontar la calidad y el rendimiento de estos proyectos, pero asignar recursos de manera m√°s espec√≠fica, como la creaci√≥n de grupos de trabajo para tareas de refactorizaci√≥n o la extracci√≥n puntual de funcionalidades hacia otros servicios, puede ser m√°s efectivo.\nüíæ Mejoras que quedaron en el olvido Otro de los grandes males que asolan a la industria es el exceso de optimismo sobre el tiempo que tendremos para modernizar nuestros productos. Podr√≠a apostar contigo, sin posibilidad de perder, que has estado en alg√∫n proyecto en cuyo backlog, muy en el fondo, resid√≠an tareas de mejora que nunca nadie tuvo tiempo de acometer.\nTodos tenemos en mente esos ambiciosos \u0026ldquo;Improve performance\u0026rdquo; o \u0026ldquo;Revamp persistence layer\u0026rdquo; que normalmente tienen unos n√∫meros de tarea en Jira extremadamente bajos y que cre√≥ una hero√≠na desconocida para ti, la cual abandon√≥ la empresa hace a√±o y medio.\n¬øEs eso deuda t√©cnica? Me temo que no.\nSin contexto y cercan√≠a temporal, las propuestas de mejora no tienen valor. Mi consejo es que te armes de voluntad, dejes el apego irracional a un lado y permitas que esas tareas se acomoden tranquilamente en el bulevar de tus sue√±os rotos. Elim√≠nalas y re-analiza el problema sobre la base de las circunstancias actuales. Farewell!\nü§ù Adaptaci√≥n de nuevos acuerdos de equipo Como √∫ltimo punto quiero destacar como antipatr√≥n de deuda t√©cnica todas aquellas tareas que nacen de cambios en los acuerdos de equipo.\n¬øEn serio has propuesto una mejora sin evaluar el impacto y el coste de cambio en tu base de c√≥digo actual? Si la respuesta es afirmativa, deber√≠as repensar tu estrategia.\nTodo cambio en las convenciones internas que nos damos nosotros mismos tendr√≠a que tener en cuenta su coste de adopci√≥n.\nY la justificaci√≥n para alejar estas tareas del t√©rmino \u0026ldquo;deuda t√©cnica\u0026rdquo; es simple: en muchos casos dichas convenciones son una recomendaci√≥n para mejorar la uniformidad del c√≥digo (elecci√≥n entre librer√≠as similares, modo de dise√±ar una API, convenciones de nombres, capas y responsabilidades de la arquitectura), acciones que no presentan una mejora t√©cnica per se, sino m√°s bien una preferencia para dotar a nuestros proyectos de una mayor cohesi√≥n.\nüßê Entonces, ¬øqu√© es la deuda t√©cnica? Si tuviese que dar una definici√≥n concisa para mi visi√≥n del concepto de deuda t√©cnica, ser√≠a la que sigue:\nDecisi√≥n de desarrollo u organizaci√≥n que se toma, de manera deliberada, como un atajo o soluci√≥n de contingencia a un problema concreto y acotado y con la que adquirimos un compromiso de resoluci√≥n real y fijado en el tiempo.\nAhora vayamos punto por punto repasando cada una de las caracter√≠sticas:\nVoluntaria o deliberada: Bajo mi prisma, no existe la deuda t√©cnica externa. Para que la podamos considerar como tal debe provenir de nosotros mismos en un ejercicio de aceptaci√≥n voluntaria. Por el mismo motivo, no puedo considerar deuda t√©cnica a algo impuesto por un equipo o departamento externo ajeno a responsabilidades t√©cnicas. Conocida y aceptada: En el momento de crear la deuda t√©cnica debemos analizar el problema, aceptar la soluci√≥n a tomar como poco adecuada y sobre todo conocer la manera √≥ptima de realizarlo en el futuro (o al menos una propuesta). No podemos admitir como deuda t√©cnica la falta de conocimiento o contexto en un momento pasado. Compromiso de soluci√≥n: El punto m√°s odiado. No hay deuda t√©cnica si no existe un compromiso cierto de devoluci√≥n de esa deuda. Como mencionaba antes, si en el fondo de tu backlog se acumulan tareas y m√°s tareas de mejora, no tienes un problema de deuda t√©cnica. Hazme caso, es otra cosa. De √°mbito reducido: La deuda tiene que ser concreta para que su resoluci√≥n sea accesible e incluso posible. No podemos considerar como deuda t√©cnica un conjunto de servicios o proyectos completos. El an√°lisis de las caracter√≠sticas de la deuda t√©cnica es importante, ya que de esa manera podremos anticiparnos a sus causas y encontrar soluciones. Tras reflexionar considero que hay tres or√≠genes comunes para este problema y tres soluciones obvias a dichas circunstancias:\nMi objetivo es exponer el problema y crear un marco de comunicaci√≥n, no aportar estrategias detalladas. Queda de tu mano y de la de tu equipo definir e impulsar las acciones y pr√°cticas necesarias para no caer en el pozo de la deuda t√©cnica.\nü§î ¬øPor qu√© es importante llamar a las cosas por su nombre? Asignar con precisi√≥n los conceptos nos conduce a descubrir soluciones m√°s efectivas para los desaf√≠os cotidianos que enfrentamos.\nAl revisar la lista anterior de situaciones distintas a la deuda t√©cnica, podemos notar que cada elemento presenta peculiaridades √∫nicas y requiere enfoques diferentes:\nErrores (Bugs): Encarar eficazmente los errores recurrentes implica contar con un s√≥lido sistema de monitorizaci√≥n u observabilidad que alerte de manera oportuna sobre incidencias, proyectos con una buena bater√≠a de tests y fomentar la simplicidad en nuestro dominio. Actualizaci√≥n de dependencias: En la actualidad, existen herramientas que facilitan enormemente esta tarea, desde bots que nos alertan sobre nuevas versiones de nuestras dependencias, hasta sistemas de detecci√≥n est√°tica y din√°mica de vulnerabilidades. Es esencial conocer a fondo las tecnolog√≠as que utilizamos y evitar incluir software de terceros a menos que sea verdaderamente necesario. C√≥digo heredado: No hay soluciones m√°gicas en este punto. Si el c√≥digo heredado es problem√°tico, debemos abordarlo de manera r√°pida y precisa desde el principio, asignando todos los recursos disponibles. No esperes lograr frutos sorprendentes con peque√±as mejoras. Los proyectos heredados de baja calidad son una carga para el equipo y pueden dar como resultado la p√©rdida de talento en la empresa. La decisi√≥n est√° en tus manos. Deuda t√©cnica antigua: Si las tareas son tan antiguas que desconoces su origen o la persona que report√≥ la incidencia, mi recomendaci√≥n ser√≠a eliminarlas directamente, reconsiderar la situaci√≥n actual y crear nuevas tareas con el contexto actualizado. Nuevos acuerdos: En el √°mbito de los nuevos acuerdos, siempre es efectivo implementar medidas que dificulten su incumplimiento. Esto puede lograrse mediante la creaci√≥n de tests de arquitectura, el uso de herramientas de linting correctamente configuradas, la promoci√≥n de t√©cnicas de trabajo como el pair/mob programming, o la adopci√≥n de una cultura de refactorizaci√≥n que no requiera la creaci√≥n expl√≠cita de tareas para su realizaci√≥n. ‚ûï En resumen El concepto \u0026ldquo;deuda t√©cnica\u0026rdquo; en el desarrollo de software ha perdido su esencia. Durante mucho tiempo se ha utilizado sistem√°ticamente de manera incorrecta para describir problemas que no son compromisos propios.\nConsidero que los errores, las actualizaciones de dependencias, las mejoras pendientes, el c√≥digo heredado o los cambios en acuerdos de equipo no son deuda t√©cnica. Y propongo una definici√≥n m√°s precisa: una decisi√≥n voluntaria que implica un compromiso fijado en el tiempo para resolver un problema espec√≠fico. Catalogar correctamente los conceptos es crucial para encontrar soluciones adecuadas y evitar malentendidos en el desarrollo de software.\nPor √∫ltimo, y ya que al tratar sobre estos conceptos siempre se usan s√≠miles econ√≥micos, me gustar√≠a acabar con una cita de David Graeber de su libro En deuda, que al hablar sobre su cancelaci√≥n dice:\n\u0026hellip; recordarnos a nosotros mismos que el dinero no es inefable, que pagar las deudas no es la esencia de la moral, que todo esto son cosas que hemos decidido hacer de determinada manera los humanos y que, si algo significa la democracia, es la capacidad de ponernos de acuerdo entre todos para hacer las cosas de otra manera.\nEspero que te haya gustado. Si es as√≠, estamos en deuda.\n","permalink":"https://mdlcs.dev/posts/2024-01-tech-debt/","summary":"\u003ch2 id=\"-un-concepto-en-boca-de-todas\"\u003eüé¨ Un concepto en boca de todas\u003c/h2\u003e\n\u003cp\u003eNos encanta hablar de \u003cstrong\u003edeuda t√©cnica\u003c/strong\u003e. Es un concepto propio, de nuestro nicho de conocimiento.\u003c/p\u003e\n\u003cp\u003ePertenezcas a la empresa a la que pertenezcas, sea cual sea el evento IT al que asistas, las conversaciones sobre deuda t√©cnica est√°n ah√≠, a la vuelta de la esquina, acechando, esperando atraparte.\u003c/p\u003e\n\u003cp\u003eSe tiende a pensar que algo que est√° en boca de todos es materia conocida, bien definida y de dominio p√∫blico. Pero en realidad con este t√©rmino ocurre todo lo contrario, hay tantas cosas que podr√≠an ser deuda t√©cnica que el concepto ha ido perdiendo su esencia, enmascarando otros problemas reales que muchas veces nos averg√ºenza reconocer.\u003c/p\u003e","title":"El problema de la 'deuda t√©cnica'"},{"content":"üê• LVL.01 - Preguntas b√°sicas Las preguntas que listo a continuaci√≥n no deber√≠an formar parte del proceso de entrevistas sino de la descripci√≥n de la oferta a la que uno se presenta. Si me apur√°is, deber√≠a haber legislaci√≥n al respecto para que estos datos sean parte obligatoria en la descripci√≥n de cualquier empleo.\nModo: ¬øPresencial, h√≠brido, teletrabajo, trabajo remoto? Salario: ¬øC√∫al es el rango salarial de la oferta? ¬øHay bonificaciones variables? Vacaciones: ¬øCu√°ntos d√≠as de vacaciones ofrece la empresa? ¬øHay d√≠as especiales de vacaciones: cumplea√±os, nochebuena y/o nochevieja, libre disposici√≥n, conciliaci√≥n? Beneficios: ¬øFormaci√≥n, seguro m√©dico, ticket restaurante, clases de ingl√©s, presupuesto para trabajo remoto, asistencia a eventos IT, otros? Menci√≥n especial a las ofertas con rangos salariales ampl√≠simos o con valores indeterminados del tipo \u0026ldquo;seg√∫n val√≠a\u0026rdquo;. No recomiendo aceptar una respuesta de este tipo ya que se podr√≠a considerar una falta de respeto a vuestro inter√©s por la oferta o a vuestro tiempo libre. Y por experiencia, no se√°is los primeros en comunicar expectativas salariales en el caso de no contar con esa informaci√≥n.\nüïµÔ∏è‚Äç‚ôÄÔ∏è LVL.02 - ¬øC√≥mo es el trabajo en el d√≠a a d√≠a? En el siguiente nivel es fundamental entender el d√≠a a d√≠a en el posible nuevo puesto de trabajo, as√≠ como conocer cuestiones b√°sicas del funcionamiento de la empresa.\nComenzar a trabajar en un lugar nuevo nos lleva a tratar con nuevas personas y forjar relaciones entre diferentes departamentos, por ello, los flujos de comunicaci√≥n son determinantes.\nHorario: ¬øCu√°l es el horario de trabajo m√°s habitual? ¬øSe realizan horarios especiales intensivos: viernes, meses de verano, navidad? D√≠a de trabajo: ¬øPodr√≠as describir como ser√≠a un d√≠a t√≠pico trabajando en el proyecto (reuniones, tiempo de foco para trabajar)? Onboarding: ¬øC√≥mo ser√° mi proceso de onboarding? Evoluci√≥n y responsabilidades: ¬øQu√© esper√°is de la persona que opte al puesto que est√°is ofertando? ¬øCu√°l es la evoluci√≥n √≥ptima que manej√°is? Otros equipos: ¬øSe dispone de un equipo de sistemas / plataforma / QA / incidencias independiente? ¬øTen√©is roles transversales en tecnolog√≠a (engineering manager, solutions architect, \u0026hellip;)? Retos empresa: ¬øCu√°l es el reto actual m√°s importante al que se enfrenta el equipo / departamento / empresa? Eventos: ¬øHay reuniones recurrentes del tipo \u0026lsquo;company meeting\u0026rsquo; o \u0026rsquo;team building\u0026rsquo;? ¬øC√≥mo suelen ser? ¬øCon qu√© periodicidad? ¬øSe pueden rechazar? Viajes: ¬øSe hace cargo la empresa de los gastos y la reserva de transporte/alojamiento cuando hay que viajar? Con este bloque de peguntas pretendo conocer c√≥mo de engrasada est√° la maquinaria burocr√°tica. Cuesta aceptar a veces que determinados problemas de productividad nacen de procesos extremadamente tediosos o poco afinados, exceso de reuniones o micro-management. A este respecto la Ley de Conway sigue plenamente vigente.\nü§´ LVL.03 - Descubre aquello que no te quieren contar En este √∫ltimo bloque me reservo un conjunto de preguntas algo m√°s controvertidas que en muchos casos las empresas ofertantes de empleo suelen \u0026rsquo;evitar\u0026rsquo;.\nComo asistente a numerosos eventos del sector IT uno siempre encuentra que las compa√±√≠as promocionan aquello de lo que se sienten orgullosas pero omiten deliberadamente informaci√≥n muy importante que puede llegar a impactar directamente en tu calidad de vida.\nDe nada sirve que anuncies a bombo y platillo tus 7 cl√∫sters de Kubernetes si despu√©s tus empleados tienen equipos inform√°ticos con 4GB de RAM o si van a recibir 5 llamadas cada madrugada cuando est√©n de oncall.\nGuardias: ¬øHay guardias? ¬øActivas o pasivas? ¬øCon qu√© periodicidad? ¬øCu√°l es la compensaci√≥n extra por realizarlas? ¬øCu√°ntas incidencias se notifican de media por semana / mes? Hardware: ¬øCu√°les son las herramientas hardware para trabajar? ¬øSe trabaja a trav√©s de un equipo compartido? ¬øSe dispone de sistemas como VPN o SSO? Software: ¬øCu√°les son las licencias software de servicios o herramientas (IntelliJ, Postman, etc) que utiliz√°is en el d√≠a a d√≠a? Rotaci√≥n y promoci√≥n: ¬øCu√°l es la antig√ºedad media de los miembros en plantilla o en el equipo? ¬øDispon√©is de planes de movilidad interna dentro de la empresa? ¬øC√≥mo funcionan los procesos de promoci√≥n? Observabilidad: ¬øQu√© software de observabilidad ten√©is? ¬øQu√© m√©tricas manej√°is en el d√≠a a d√≠a? Estrategia y planificaci√≥n: ¬øQui√©n decide o prioriza la estrategia de negocio? ¬øCada cu√°nto cambia o se re-analiza? ¬øNorth Star para el equipo / departamento / compa√±√≠a? Outboarding: ¬øTen√©is proceso de outboarding? ¬øC√≥mo gestion√°is la marcha de empleados? Documentaci√≥n: ¬øCu√°l es vuestra estrategia de documentaci√≥n? ¬øC√≥mo os asegur√°is de que el conocimiento se comparte y llega a diferentes √°reas de la empresa? ¬øCuid√°is vuestro lenguaje ubicuo? ¬øC√≥mo luch√°is contra los silos de informaci√≥n? Cultura de equipo: Estrategia de testing / branching model, tiempo de formaci√≥n o mejora continua, feedback interno, plan de carrera. Por experiencia, muchas de estas preguntas descolocan y derivan en situaciones tensas e incluso desagradables durante las entrevistas. Mi objetivo es que manej√©is ejemplos sobre qu√© preguntar cuando teng√°is dudas fundadas en alg√∫n aspecto clave.\nEn mi humilde opini√≥n, habiendo estado en ambos lados de un proceso de contrataci√≥n, la formulaci√≥n de preguntas denota inter√©s por el puesto y nunca deber√≠a ser considerada un ataque.\n‚ûï En resumen Una entrevista deber√≠a ser algo as√≠ como una conversaci√≥n amistosa entre dos partes interesadas en compartir un futuro laboral. En dicho proceso es fundamental hacer preguntas para conocer detalles sobre el puesto que te est√°n ofertando.\nMi recomendaci√≥n es que te prepares intentando conocer informaci√≥n b√°sica de la empresa para la que te postulas y que seas honesto y cercano durante las entrevistas. No te olvides tampoco de tomar notas sobre todo lo que te compartan en las diferentes fases de un proceso de selecci√≥n.\nY cuando llege ese momento de \u0026quot;¬øTienes alguna pregunta para nosotros?\u0026quot;, ya sabes lo que hacer. Pregunta.\n","permalink":"https://mdlcs.dev/posts/2024-01-interview-questions/","summary":"\u003ch2 id=\"-lvl01---preguntas-b√°sicas\"\u003eüê• LVL.01 - Preguntas b√°sicas\u003c/h2\u003e\n\u003cp\u003eLas preguntas que listo a continuaci√≥n no deber√≠an formar parte del proceso de entrevistas sino de la descripci√≥n de la oferta a la que uno se presenta. Si me apur√°is, deber√≠a haber legislaci√≥n al respecto para que estos datos sean parte obligatoria en la descripci√≥n de cualquier empleo.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eModo\u003c/strong\u003e: ¬øPresencial, h√≠brido, teletrabajo, trabajo remoto?\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSalario\u003c/strong\u003e: ¬øC√∫al es el rango salarial de la oferta? ¬øHay bonificaciones variables?\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eVacaciones\u003c/strong\u003e: ¬øCu√°ntos d√≠as de vacaciones ofrece la empresa? ¬øHay d√≠as especiales de vacaciones: cumplea√±os, nochebuena y/o nochevieja, libre disposici√≥n, conciliaci√≥n?\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eBeneficios\u003c/strong\u003e: ¬øFormaci√≥n, seguro m√©dico, ticket restaurante, clases de ingl√©s, presupuesto para trabajo remoto, asistencia a eventos IT, otros?\u003c/li\u003e\n\u003c/ul\u003e\u003c/blockquote\u003e\n\u003cp\u003eMenci√≥n especial a las ofertas con rangos salariales ampl√≠simos o con valores indeterminados del tipo \u0026ldquo;seg√∫n val√≠a\u0026rdquo;. No recomiendo aceptar una respuesta de este tipo ya que se podr√≠a considerar una falta de respeto a vuestro inter√©s por la oferta o a vuestro tiempo libre. Y por experiencia, no se√°is los primeros en comunicar expectativas salariales en el caso de no contar con esa informaci√≥n.\u003c/p\u003e","title":"¬øTienes alguna pregunta para nosotros?"},{"content":"Aqu√≠ hallar√°s una breve selecci√≥n de los libros que estoy leyendo actualmente, aquellos que tengo en mente para el futuro, y los que ya he terminado. Esta lista refleja mis preferencias y necesidades, por lo que es subjetiva.\nSi tienes alguna recomendaci√≥n o comentario sobre los t√≠tulos, no dudes en contactarme en redes sociales. Gradualmente ampliar√© la recopilaci√≥n con m√°s t√≠tulos.\nLeyenda: Estado üö¶ (üî¥ no empezado, üü° en progreso, üü¢ terminado).\nTabla de contenidos\nTop 5 estrellas Ingenier√≠a, arquitectura y buenas pr√°cticas IA Java y Kotlin Domain-driven design Agile, XP, Lean Management y psicolog√≠a Tecnolog√≠as Historia, econom√≠a y finanzas, pol√≠tica Varios Top 5 estrellas The Pragmatic Programmer 20th Ann Effective Java 3rd Ed This is Lean: Resolving the efficiency paradox Utop√≠a para realistas Menos es m√°s Ingenier√≠a, arquitectura y buenas pr√°cticas T√≠tulo, autor üö¶ Nota The pragmatic programmer 20th Ann, de Andy Hunt y David Thomas üü¢ 5Ô∏è‚É£‚≠ê Modern software engineering, de David Farley üü¢ 4Ô∏è‚É£‚≠ê Get your hands dirty on clean architecture 2nd Ed, de Tom Hombergs üü¢ 4Ô∏è‚É£‚≠ê A philosophy of software design, de John Ousterhout üü¢ 4Ô∏è‚É£‚≠ê Tidy first?, de Kent Beck üü° ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è Refactoring 2nd Ed, de Martin Fowler üî¥ ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è Staff engineer, de Will Larson y Tanya Reilly üî¥ ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è IA T√≠tulo, autor üö¶ Nota Inteligencia artificial: Gu√≠a para seres pensantes, de Melanie Mitchell üü¢ 4Ô∏è‚É£‚≠ê Armas de destrucci√≥n matem√°tica, de Cathy O\u0026rsquo;Neil üü¢ 4Ô∏è‚É£‚≠ê Java y Kotlin T√≠tulo, autor üö¶ Nota Effective Java 3rd Ed, de Joshua Bloch üü° 5Ô∏è‚É£‚≠ê Atomic Kotlin, de Bruce Eckel y Svetlana Isakova üü° ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è Effective Kotlin 2nd Ed, de Marcin Moskala üü° ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è Domain-driven design T√≠tulo, autor üö¶ Nota Domain-driven design distilled, de Vaughn Vernon üü¢ 4Ô∏è‚É£‚≠ê Patterns, principles and practices of domain-driven design, de Scott Millett y Nick Tune üî¥ ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è Agile, XP, Lean T√≠tulo, autor üö¶ Nota This is Lean: Resolving the efficiency paradox, de Nickas Modig üü¢ 5Ô∏è‚É£‚≠ê Por un Scrum popular: Notas para una revoluci√≥n √°gil, de Tobias Mayer y Alan Cyment üü¢ 4Ô∏è‚É£‚≠ê Extreme Programming explained, de Kent Beck y Cynthia Andres üü° ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è The agile samurai, de Jonathan Rasmusson üî¥ ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è Management y psicolog√≠a T√≠tulo, autor üö¶ Nota Drive: The surprising truth about what motivates us, de Daniel H. Pink üü¢ 4Ô∏è‚É£‚≠ê ¬°S√≠!, de Noah J. Goldstein, Steve J. Martin y Robert B. Cialdini üü¢ 4Ô∏è‚É£‚≠ê Nuestra mente nos enga√±a, de Helena Matute üü¢ 3Ô∏è‚É£‚≠ê Mide lo que importa, de John Doerr üü¢ 3Ô∏è‚É£‚≠ê Mindset: La actitud del √©xito, de Carol S. Dweck üü¢ 3Ô∏è‚É£‚≠ê Give and take, de Adam M. Grant üî¥ ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è C√≥mo ganar amigos e influir sobre las personas, de Dale Carnegie üî¥ ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è Pensar r√°pido, pensar despacio, de Daniel Kahneman üî¥ ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è Engineering management for the rest of us, de Sarah Drasner üî¥ ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è Scaling people: Tactics for management and company building, de Claire Hughes Johnson üî¥ ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è Tecnolog√≠as T√≠tulo, autor üö¶ Nota Kafka: The definitive guide 2nd Ed, de Gwen Shapira y m√°s üî¥ ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è Designing data-intensive applications, de Martin Kleppmann üî¥ ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è Patterns of distributed systems, de Unmesh Joshi üî¥ ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è Historia, econom√≠a y finanzas, pol√≠tica T√≠tulo, autor üö¶ Nota Utop√≠a para realistas, de Rutger Bregman üü¢ 5Ô∏è‚É£‚≠ê Menos es m√°s, de Jason Hickel y Clara Mistral üü¢ 5Ô∏è‚É£‚≠ê Al menos tienes trabajo, de Naiara Puertas üü¢ 4Ô∏è‚É£‚≠ê El economista camuflado, de Tim Harford üü¢ 3Ô∏è‚É£‚≠ê El origen del capitalismo. Una mirada de largo plazo, de Ellen Meiksins Wood üü° ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è Neoliberalismo: Una breve introducci√≥n, de Manfred B. Steger y Ravi K. Roy üî¥ ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è Historia de Espa√±a contada para esc√©pticos, de Juan Eslava Gal√°n üî¥ ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è A libertarian walks into a bear: The utopian plot to liberate an american town, de Matthew Hongoltz-Hetling üî¥ ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è El futuro de Europa: C√≥mo decrecer para una reindustrializaci√≥n urgente, de Antonio Turiel üî¥ ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è Varios T√≠tulo, autor üö¶ Nota Pensar en sistemas, de Donella H. Meadows üü¢ 4Ô∏è‚É£‚≠ê Upgrade, de M. Quintana y D. Alay√≥n üü¢ 4Ô∏è‚É£‚≠ê Data science, de John D. Kelleher y Brendan Tierney üü¢ 3Ô∏è‚É£‚≠ê The art of statistics: How to learn from data, de David Spiegelhalter üü° ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è El mundo sin fin, de Jancovici üî¥ ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è Cybersecurity, de Duane C. Wilson üî¥ ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è Good strategy, bad strategy: The difference and why it matters, de Richard P. Rumelt üî¥ ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è ¬øEst√° usted de broma Sr. Feynman?, de Richard P. Feynman üî¥ ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è Despertares, de Oliver Sacks üî¥ ü§∑‚Äç‚ôÄÔ∏èü§∑‚Äç‚ôÄÔ∏è ","permalink":"https://mdlcs.dev/books/","summary":"\u003cp\u003eAqu√≠ hallar√°s una \u003cstrong\u003ebreve selecci√≥n\u003c/strong\u003e de los libros que estoy leyendo actualmente, aquellos que tengo en mente para el futuro, y los que ya he terminado. Esta lista refleja mis preferencias y necesidades, por lo que es \u003cstrong\u003esubjetiva\u003c/strong\u003e.\u003c/p\u003e\n\u003cp\u003eSi tienes alguna recomendaci√≥n o comentario sobre los t√≠tulos, no dudes en contactarme en redes sociales. Gradualmente ampliar√© la recopilaci√≥n con m√°s t√≠tulos.\u003c/p\u003e\n\u003cp\u003eLeyenda: \u003cstrong\u003eEstado\u003c/strong\u003e üö¶ (üî¥ no empezado, üü° en progreso, üü¢ terminado).\u003c/p\u003e","title":"Club de lectura"},{"content":"üêë LechazoConf Nueva edici√≥n el pr√≥ximo 15 de Junio. LechazoConf 2024: consigue tus entradas\nEn el pasado colabor√© como voluntario durante las jornadas de la conferencia t√©cnica LechazoConf que tiene lugar en Valladolid. Se trata de un evento que sirve como encuentro de profesionales del emprendimiento, tecnolog√≠a, negocio y startups. Los ponentes que han pasado por el evento han sido de primer orden. Si tienes la oportunidad de asistir, no lo dudes.\nEdiciones pasadas LechazoConf 2017 Playlist LechazoConf 2018 Playlist Pantomima LechazoConf üìô TeachTech No habr√° edici√≥n de TeachTech 2024: anuncio üò¢\nTeachTech es una iniciativa sin √°nimo de lucro en la que varios profesionales del sector nos reunimos y organizamos para ense√±ar a programar desde cero a personas con pocos o nulos conocimientos en la materia que buscan nuevos retos. Los contenidos del curso est√°n relacionados con el ecosistema web: HTML, CSS y Javascript.\nPuedes echar un vistazo a nuestra web si quieres. En ella en ocasiones escribo alguna entrada que pueda ser √∫til a nuestros alumnos y alumnas. üëá\nPosts üìù Conoce los distintos caminos del sector IT Repositorios ü§ñ Wordle-101 ü§ñ Static-Catalog-101 ","permalink":"https://mdlcs.dev/more-content/","summary":"\u003ch2 id=\"-lechazoconf\"\u003eüêë LechazoConf\u003c/h2\u003e\n\u003chr\u003e\n\u003cp\u003e\u003cstrong\u003eNueva edici√≥n el pr√≥ximo 15 de Junio. LechazoConf 2024: \u003ca href=\"https://lechazoconf.com/\"\u003econsigue tus entradas\u003c/a\u003e\u003c/strong\u003e\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003eEn el pasado colabor√© como voluntario durante las jornadas de la conferencia t√©cnica \u003cstrong\u003eLechazoConf\u003c/strong\u003e que tiene lugar en Valladolid. Se trata de un evento que sirve como encuentro de profesionales del emprendimiento, tecnolog√≠a, negocio y \u003cem\u003estartups\u003c/em\u003e. Los ponentes que han pasado por el evento han sido de primer orden. Si tienes la oportunidad de asistir, no lo dudes.\u003c/p\u003e","title":"M√°s contenido"},{"content":"Uno de los prop√≥sitos que tengo en mente desde hace tiempo es reservar parte de mi tiempo personal para prestar mi ayuda a cualquier persona que se quiera adentrar en el mundo IT o que tenga dudas sobre c√≥mo avanzar en el mismo.\nü§∑ ¬øC√≥mo? A√∫n no tengo decidida la manera de accionar este asunto, as√≠ que ir√© haciendo pruebas y ensayos poco a poco. Lo que s√≠ puedo asegurar es que:\nSi lo hago ser√° SIEMPRE de manera gratuita y desinteresada. No aseguro disponibilidad ni compromiso; el √∫nico l√≠mite ser√° mi tiempo libre y que decida aceptar. Soy desarrollador de software; no soy economista, ni psic√≥logo ni especialista en otras profesiones. Si hablamos me limitar√© a dar opiniones y consejos basados en mi experiencia y √°rea de conocimiento. üìã Requisitos Si te interesa deber√°s cumplir los siguientes requisitos:\nComunicarte en castellano o ingl√©s (son los dos √∫nicos idiomas que manejo). Ser mayor de edad (por motivos obvios). üó£Ô∏è Temas Algunos temas que podemos tratar:\nRedes de empleo. An√©cdotas o aprendizajes propios dentro del mundo IT. Planes de desarrollo personal o carrera. Cualquier otro tema que se te ocurra y que tenga que ver con el sector. ‚òéÔ∏è Contacto En el futuro me gustar√≠a poder agendar sesiones de una manera m√°s adecuada pero, por ahora, si te interesa, ponte en contacto conmigo mediante DM en alguna de mis redes p√∫blicas. Podr√°s encontrarlas en la p√°gina principal.\n","permalink":"https://mdlcs.dev/mentoring/","summary":"\u003cp\u003eUno de los prop√≥sitos que tengo en mente desde hace tiempo es reservar parte de mi tiempo personal para \u003cstrong\u003eprestar mi ayuda a cualquier persona que se quiera adentrar en el mundo IT\u003c/strong\u003e o que tenga dudas sobre c√≥mo avanzar en el mismo.\u003c/p\u003e\n\u003ch2 id=\"-c√≥mo\"\u003eü§∑ ¬øC√≥mo?\u003c/h2\u003e\n\u003cp\u003eA√∫n no tengo decidida la manera de accionar este asunto, as√≠ que ir√© haciendo pruebas y ensayos poco a poco. Lo que s√≠ puedo asegurar es que:\u003c/p\u003e","title":"Mentor√≠a"}]